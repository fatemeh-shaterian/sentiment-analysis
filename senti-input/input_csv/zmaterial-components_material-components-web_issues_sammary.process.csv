issueId,issue_number,url,user,like,dislike,laugh,hooray,confused,heart,body
346410456,3280,https://api.github.com/repos/material-components/material-components-web/issues/3280,williamernest,1,0,0,0,0,0,the floating label on the outlined text field should align with the input text.current state:! image state image
345758226,3258,https://api.github.com/repos/material-components/material-components-web/issues/3258,kaieong,1,0,0,0,0,0,correct the grammar in running tests across browser section in contributing.md
344948570,3236,https://api.github.com/repos/material-components/material-components-web/issues/3236,mustafa-x,2,0,0,0,0,0,i have a few buttons on screen and would like to add a ripple effect to them all by doing something like rippleelements document.queryselectorall(.foo-button)mdc.ripple.mdcripple.attachto(rippleelements); but sadly this doesn;t work and i am forced to do; var step;var button for step step step button button+step mdc.ripple.mdcripple.attachto(document.queryselector(button));} can we add queryselectorall here is a working example on codepen
343432886,3172,https://api.github.com/repos/material-components/material-components-web/issues/3172,bonniezhou,1,0,0,0,0,0,mdc-text-field-outline-corner-radius($radius mixin doesnt exist though its in the readme).currently corner radius for the outlined text field is set with a mdc-text-field-outline-corner-radius private mixin which calls mdc-notched-outline-corner-radius we should make it public similar to what we have for box and textarea so users dont need to call notched-outline mixins to change the text field corner radius
340864641,3062,https://api.github.com/repos/material-components/material-components-web/issues/3062,jalfcolombia,0,0,0,0,1,0,hola a todosespero esto en realidad sirva de algo pero con la ayuda que dan es totalmente imposible hacer algo productivo.se pierde mucho tiempo tratando de hacer correr algo por qu no hacen las cosas fciles como las ayudas de bootstrap o eso si funciona con solo pegar el cdigo.solo pude hacer andar el textfield despues de minutos de lectura y el ripple del botn despues de horas de lectura no logr nada. htmlinput labelbutton
334275515,2972,https://api.github.com/repos/material-components/material-components-web/issues/2972,endigo9740,1,0,0,0,0,0,what mdc web version are you using what are the steps to reproduce the bug? view the mdc menu readme here the javascript instructions include the following instantiation var menu new mdc.menu.mdcmenu(menuel new mdc.menu.mdcmenu(menuel cannot be instantiated without importing an external module which is not provided this is done on other components such as the ripple effect on the button component: import mdcripple from material/ripple;const buttonripple new mdcripple(document.queryselector(.mdc-button what is neededplease provide the missing import statement or clarify how this is supposed to work thanks
333331140,2949,https://api.github.com/repos/material-components/material-components-web/issues/2949,kfranqueiro,1,0,0,0,0,0,what mdc web version are you using?v..x what browser(s is this bug affecting?all what are the steps to reproduce the bug load hover over an unselected radio button what is the expected behavior?the hover color should be a semitransparent version of the unselected radio outline color what is the actual behavior?the hover color is a semitransparent version of the selected radio outline/dot color any other information you believe would be useful?were presumably applying a single states color unconditionally right now.moreover im unsure if theres a graceful way of accomplishing this given that it needs to select on the before and after pseudo-elements of the parent element of the input but is dependent on the checked state of the child input.maybe im missing something but fixing this might require restructuring the dom for checkbox and radio
330472742,2906,https://api.github.com/repos/material-components/material-components-web/issues/2906,moog16,0,0,0,1,0,0,related new navigation drawer according to spec the drawer and the content outside of the drawer should independently scroll in pr the height of the page is set to which disables window scroll the top app bar on the other hand is listening to the window scroll event which never fires my proposed solution is to add a method to the top app bar that deregisters the scroll handler on the window and registers a new scroll handler with a different target element
330003582,2891,https://api.github.com/repos/material-components/material-components-web/issues/2891,RedTech64,0,0,0,0,1,0,bugsthe mdcchipset.addchip function is broken in what mdc web version are you using what browser(s is this bug affecting?chrome what os are you using?windows what are the steps to reproduce the bug create a mdcchipset invoke the mdcchipset.addchip function what is the expected behavior?a chip to be added to the chip set what is the actual behavior?an error is given:uncaught typeerror cannot read property queryselector of undefined any other information you believe would be useful?after reverting back to this error doesnt occur
328757072,2865,https://api.github.com/repos/material-components/material-components-web/issues/2865,dessant,1,0,0,0,0,0,it appears the images are laid out vertically from top to bottom this may not be the most common or expected stacking order and the design guidelines seem to imply that the order is ltr or rtl
326163355,2802,https://api.github.com/repos/material-components/material-components-web/issues/2802,nfriend,5,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting?chrome version official build bit)user agent mozilla windows nt win x applewebkit khtml like gecko chrome safari what os are you using?windows pro version build what are the steps to reproduce the bug?build a form that includes a mdc-text-field submit the form using chrome open the form again and enter the same information allowing chrome to autofill the form values what is the expected behavior?the autofill style should not obscure the text field control what is the actual behavior?the yellow autofill background that is applied to the controls obscures the outline and the floating text label here is a screenshot demonstrating this behavior:! image reference here is what the form looks like without the autofill styling applied:! image
325221943,2787,https://api.github.com/repos/material-components/material-components-web/issues/2787,YuilTripathee,2,0,0,0,0,0,feature requestsfor a beginner it would be easy to start on with some sample sites made with mdc web its been difficult to figure out the layout and basically the material design and how it can be implemented
325202461,2786,https://api.github.com/repos/material-components/material-components-web/issues/2786,aleehedl,1,0,0,0,0,0,i would hope to be able to override the mdc-button variables defined in since default is not used the variables cant be overridden easily is this by design or can i submit a pr
325066323,2784,https://api.github.com/repos/material-components/material-components-web/issues/2784,lynnjepsen,1,0,0,0,0,0,spec shows px from top of box to baseline of label and then px from baseline of label to baseline of text our component shows px from top of box to baseline of label and then px from baseline of label to baseline of text! image actually think the spec might be wrong it seems a bit tight on the spacing
325064812,2783,https://api.github.com/repos/material-components/material-components-web/issues/2783,lynnjepsen,1,0,0,0,0,0,the spec shows px from bottom of text field to baseline of helper text our mdc-text-field looks like this:! image
325059904,2781,https://api.github.com/repos/material-components/material-components-web/issues/2781,namannehra,1,0,0,0,0,0,invalid input in number fields reports its value as an empty string this value is used to check if label should float this results in label not floating when invalid input is present this commit changes shouldfloat to check for badinput too badinput is true if invalid input present so the label floats correctly
324506972,2761,https://api.github.com/repos/material-components/material-components-web/issues/2761,lynnjepsen,0,0,0,1,0,0,we had logic in our mdcchipsetfoundation to add and remove html from the dom this is difficult for mdc web to maintain so we need to remove that logic...but we need our wrapping libraries like react to handle adding/removing html from the dom so our foundation needs to be workable with wrapping libraries
322549711,2735,https://api.github.com/repos/material-components/material-components-web/issues/2735,rhroyston,6,0,0,0,0,0,first mdc-web is looking great great progress!on the individual component demo pages e.g slider viewing page source shows uglified code ideally one should be encouraged to view the page source for further instruction on how to stand these components up please do not uglify or obfuscate the demo code pretty print the html and use es scripting the kiss principle you
322244512,2732,https://api.github.com/repos/material-components/material-components-web/issues/2732,gjdev,1,0,0,0,0,0,the changelog of this project does not include the following commits even though they made it into a release aaddeefceabcedc dabceddffbfbdeethis is probably because they use refactor is label which is not recognized?anyway these commits should be in the changelog for the release by the way they also contain breaking changes which are not labeled as such in the commit message
322172614,2731,https://api.github.com/repos/material-components/material-components-web/issues/2731,lozandier,2,0,0,0,0,0,for the sake of maximizing the capabilities of the web platform associated with typography flexibility by components to react to different font sizes within their boundaries common in rwd flows improved ability to establish vertical rhythm improved accessibility so on it seems to make sense to suggest material web components recently updated to use rem em units instead of px units for the sake of perhaps dev convenience there may be value leaving pixel values as comments or using a pxtoeem function common in popular css frameworks such as foundation bootstrap: sass@mixin mdc-button__icon include mdc-rtl-reflexive-box(margin right px display inline-block width px height px font-size px vertical-align top;} changes to sass base font size is px the default of all major browsers material-components-web supports@mixin mdc-button__icon include mdc-rtl-reflexive-box(margin right rem px display inline-block width em px height em px font-size rem px vertical-align top;} or sass note conventional pxtoem funcs accept both px using sasss type-of or other sass meta-programing features@mixin mdc-button__icon include mdc-rtl-reflexive-box(margin right pxtorem display inline-block width pxtoem height pxtoem font-size pxtorem vertical-align top;} alternatively but not ideal would be the ability to override every value currently using pixels with css variables such as mwc-icon-button-height .this seems messy and would be a pain for intermediate advanced components that would seemingly only be alleviated once the css shadow parts proposal lands for at least the web components port of the recently updated components.with material components recently updated to be more customizable it leaves an opportunity for this change to finally be done to conform with ideal application of font-sizes padding spacing that web platform enables better than what is enabled by pixels in contexts where typography-based-sizing is n/a percentages or viewport units should ideally be used instead of pixels such as vh vw for more out-of-the-box flexibility commonly an issue with the initial release of material design components for the web when web creatives inevitably want to realize designs with the components in a responsive web design manner rather than an adaptive web design manner indirectly enforced with the fixed units used by the styles of existing components
322129322,2730,https://api.github.com/repos/material-components/material-components-web/issues/2730,john-fenton,1,0,0,0,0,0,material.io icon sheet no longer shows numeric character references for icons only displays ligatures in the ie and below section modern browsers-->check_boxcheck_box please fix and also supply an interim reference sheet
321771097,2723,https://api.github.com/repos/material-components/material-components-web/issues/2723,acdvorak,0,0,0,0,0,1,how to test bashexport cbt_username=...export cbt_authkey=...export mdc_gcloud_service_account_key_file_path no diffsnpm run screenshot:buildnpm run screenshot:test lots of diffsecho mdc-button:not(:disabled){color:red packages/mdc-button/mdc-button.scssecho mdc-button:disabled{margin-left:px packages/mdc-button/mdc-button.scssnpm run screenshot:buildnpm run screenshot:test what it does generates a report file containing all diff images uploads the report file to gcs adds a diffreporturl field to golden.json in npm run screenshot:update-goldens example output with diffs without diffs
321686089,2722,https://api.github.com/repos/material-components/material-components-web/issues/2722,acdvorak,1,0,0,0,0,0,how to test bashexport cbt_username=...export cbt_authkey=...export mdc_gcloud_service_account_key_file_path no diffsnpm run screenshot:buildnpm run screenshot:test mdc-include-url=mdc-fab mdc-diff-base=head diffsecho mdc-fab:not(:disabled){color:red packages/mdc-fab/mdc-fab.scssecho mdc-fab:disabled{margin-left:px packages/mdc-fab/mdc-fab.scssnpm run screenshot:buildnpm run screenshot:test mdc-include-url=mdc-fab mdc-diff-base=head what it does adds screenshot test pages for baseline and mini fabs fixes image cropping once and for all uses a distinctive px border of abc instead of a background color adds bottom padding to the body to prevent chromeless screenshots from being cut off successfully removes edges stupid browser chrome adds mdc-diff-base cli arg and displays it in the report metadata waits seconds before capturing screenshots to avoid icon font loading problems ie bugthis test shows that the fab icon is misaligned in ie chrome! image ie image example output report.html
321672257,2721,https://api.github.com/repos/material-components/material-components-web/issues/2721,williamernest,1,0,0,0,0,0,if you dont have a navigation icon the top app bar fails to instantiate the permanent drawer example is a good use case for having a top app bar without a menu/navigation icon
321427569,2718,https://api.github.com/repos/material-components/material-components-web/issues/2718,devvercer,3,0,0,0,0,0,i theme with custom properties but my primary colour is not used for the focused label.this fixes it locally:.mdc-text-field--focused:not(.mdc-text-field--disabled mdc-floating-label color var(--mdc-theme-primary
320324361,2704,https://api.github.com/repos/material-components/material-components-web/issues/2704,williamernest,2,0,0,0,0,0,missed a change to mobile fixed-adjust class with resolves
318734952,2679,https://api.github.com/repos/material-components/material-components-web/issues/2679,sixro,1,0,0,0,0,0,hi not an issue per se but a feedback.i used getmdl.io in the past and i was really impressed by the productivity i had in just one evening i was able to create a draft website.with this version i started to have some issues.the last issue is with card but it is just an example).i was trying to add a card checking the demo at the beginning it seems simple as getmdl.iounfortunately the cards were not appearing like the demo and investigating the demo i found so many css customization with those demo styles that it was basically impossible to understand what it is doing only on that specific card component.my cents
317293575,2639,https://api.github.com/repos/material-components/material-components-web/issues/2639,jimbojetlag,10,0,0,0,0,1,please find below my comments and questions about the mdc web these did not feel right to be published on stackoverflow as so comes with the high risk of mods flagging questions like this i am writing this as after a long research on which md implementation to use for our user facing web app our team ended up being frustrated with the approach of google about making many projects that seem to have the same functionality only to kill some of them in the future mdc web tries to be framework agnostic just like mdl yes there are advantages when doing this but they come with this major major drawback developing new components is difficult time consuming and error prone there is no easy way of state managements no templating all the advances in virtual dom are ignored in our opinion this is exactly what killed mdl and i do not see why it shouldnt kill mdc web too mdc web was published back in december it is a paid project backed by google and a dedicated team yet after over a year the implemented components are really incomplete comparing to many md implementation out in the wild by single unpaid developers i refer you to point for one of the reasons behind mdc web progress being slow what is the target product for mdc web is it web applications or websites if its for websites then mdc web is just a rewrite of mdl if its for web applications how are we web app developers supposed to use mdc web for non trivial apps i can see some authors of the project recommend using mdc web in parallel with other frameworks every major framework out there now comes with a mature md implementation and override mdc web components why would we use an md library in react and then opt to say use text field component of mdc which google products use mdc web one of the major drivers of making progress with the components is when the library is used in real world products
316296850,2608,https://api.github.com/repos/material-components/material-components-web/issues/2608,ricardobrandao,1,0,0,0,0,0,feature requestsadd option to disable or override the escape keydown handler as of now a document keydown handler is being added in the mdcslidabledrawerfoundation that closes the drawer when the escape key is pressed.currently if a persistent drawer and a dialog are open when the user tries to close the dialog by pressing the escape key both the dialog and the drawer will be closed what mdc web version are you using what is the expected behavior clicking the escape key should not close the drawer what is the actual behavior clicking the escape key anywhere closes the drawer any other information you believe would be useful?you can check the demo in this codepen in order to reproduce follow the following steps open the drawer open the dialog press the escape key
316045361,2603,https://api.github.com/repos/material-components/material-components-web/issues/2603,danfascia,1,0,0,0,0,0,why is an mdc drawer a fixed px width regardless of device?it seems crazy that its so small on an xl desktop screen and it puts me off using the component in favour of my own push drawer.if i override the fixed px width with a percentage in the scss does that work for all of the animation calculations
313912421,2561,https://api.github.com/repos/material-components/material-components-web/issues/2561,kfranqueiro,0,0,0,1,0,0,one of our designers noticed that some of our text fields looked like they were animating their labels slower than others.currently floating-label defaults to ms duration and were overriding it for outlined text field to ms.all three types of text fields should be transitioning at ms for each direction
313111934,2552,https://api.github.com/repos/material-components/material-components-web/issues/2552,djensen47,9,0,0,0,0,0,recently the mdc-select component was regressed to only allow native select the technical reasons are reasonable but this left the community without a reasonable looking menu-style select the native select works but has a very inconsistent look and feel what i propose is two separate components for select components mdc-select-menu this would be the removed component that was based on the mdc-menu mdc-select-native the native select that we have nowas others have pointed out this change is discouraging to both current and would be users of this library please allow developers to decide which component is best for their use case.thanks for listening to my proposal lastly i can never give enough thanks to the team and contributors for building and maintaining this great library in the first place so thank you again
312987820,2545,https://api.github.com/repos/material-components/material-components-web/issues/2545,pgbross,1,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting chrome version official build beta bit what os are you using fedora workstation fc.x what are the steps to reproduce the bug run a page with a snackbar and a button to show it set snack data to have action hanndler that opens a window target blank show snackbar follow action wait for new window to render go back to original tab wait for timeouts behind the scene to complete show snackbar observe action button is missing and is never dismissed see codepen for example what is the expected behavior when the snackbar cleans itself up it should it may need to be aware the window.transitionend isnt captured or otherwise guard against it not happening at the right time what is the actual behavior the foundation cleanup method appears to be called multiple times without a transitionend actually occuring any other information you believe would be useful?if you use the codepen above and experiment with the timing of when you press the show button relative to when you return from the newly opened tab you will see other effects such as the next snackbar being dismissed well before its expected timeout
311752165,2521,https://api.github.com/repos/material-components/material-components-web/issues/2521,acdvorak,0,0,0,1,0,0,fixes the sauce_username and sauce_access_key environment variables are now stored in our travis ci project settings
310747738,2498,https://api.github.com/repos/material-components/material-components-web/issues/2498,pgbross,2,0,0,0,0,0,latest release material-components-web v appears to be missing material/tab dependency in the npm registry. npm i material-components-web@.. throws error npm err code enpm err not found material/tab
310233681,2493,https://api.github.com/repos/material-components/material-components-web/issues/2493,MrChriZ,1,0,0,0,0,0,is there any kind of news feed/project status page for this project?i see toolbar is being deprecated is there somewhere that things like this are being announced
308967076,2471,https://api.github.com/repos/material-components/material-components-web/issues/2471,QJan84,1,0,0,0,0,0,see closed)i have the same problem.i have an input free user input in a mdcselect menu and can also enter here no space.---! select-input
308616828,2459,https://api.github.com/repos/material-components/material-components-web/issues/2459,kfranqueiro,0,0,0,2,0,0,fixes fixes node-sass is now public on npm and still causes the same problem that people had previously experienced.the cause is actually an intentional change in sass the way css variables are handled has changed to better correspond to the css spec they no longer allow arbitrary sassscript in their values instead almost all text in the property values will be passed through unchanged to css the only exception is which will inject a sassscript value as before.the solution is therefore to explicitly use around values of css custom properties that use sassscript expressions the only place i noticed us using sassscript expressions for a css custom property value is the instance in the mdc ripple mixins that caused both and i compared the output before/after this fix vs master the only other difference between this branch and master is that libsass apparently changed how they split multiple selectors i.e comma-separated in the output theyre now split to one per line rather than all on one line
307838173,2451,https://api.github.com/repos/material-components/material-components-web/issues/2451,deviousasti,1,0,0,0,0,0,ive noticed that every two releases or so there are breaking changes which completely break different parts of the application and im having a bunch of commits simply labeled fix mdc breaking component every time i update mdc doesnt follow semantic versioning so i or build tools cant tell whether this is a bugfix release or a major one until its upgraded and the actual pages are viewed.can this library be used as of now for production or should i wait until a milestone release
306029015,2422,https://api.github.com/repos/material-components/material-components-web/issues/2422,abraham,2,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting chrome official build beta bit safari firefox bit what os are you using?macos d what are the steps to reproduce the bug place mdc-text-field in a mdc-menu open menu and select text-field enter a b c with spaces observe that the demo codepen what is the expected behavior?spaces should not be prevented from being entered and the value of the text-field should be a b c what is the actual behavior?entered spaces are ignored and the value of the text-field is abc
305623807,2410,https://api.github.com/repos/material-components/material-components-web/issues/2410,MindSculpt,1,0,0,0,0,0,bugsfollow the template below to ensure the quickest and most accurate response to your issue what mdc web version are you using what browser(s is this bug affecting all what os are you using mac sierra what are the steps to reproduce the bug please write the steps which need to be taken in order to reproduce the bug these steps should be as detailed as possible e.g compile sass with gulp task including material-components-web/material-components-web.scss add mdc basic tabs html reference processed css and add js manual instantiation to page click a tab press state opacity is broken inspecting the element shows the following unprocessed sass var in devtools as an actual class value which is whats causing the reported issue: .mdc-tab.mdc-ripple-upgraded mdc-ripple-fg-opacity opacity mdc-tabs-issue what is the expected behavior tab press state should work for compiled sass as it does here what is the actual behavior press state of tab is solid black any other information you believe would be useful ive tried multiple combinations of rolling back packages and gulp-sass versions to check if it was something on my end but the results are the same setting up a test page with tabs that pulls in the css from a cdn works as expected i can confirm that the pre-compiled css that ships with the mdc package doesnt have this issue and the tabs display as they should there are no errors or other issues during sass compiling
305310856,2399,https://api.github.com/repos/material-components/material-components-web/issues/2399,lynnjepsen,9,5,0,0,4,0,we initially removed this because we were trying to style mdc-select so it used mdc-menu but we discovered that we lost a lot of native functionality with the select element so we will remove mdc-select s dependency on mdc-menu and instead use the native select element
304517052,2386,https://api.github.com/repos/material-components/material-components-web/issues/2386,kfranqueiro,2,0,0,0,0,0,bugs what mdc web version are you using what browser(s is this bug affecting?safari what os are you using?os x not sure if this also affects ios what are the steps to reproduce the bug go to material-components-web.appspot.com/tabs.html in safari click on a tab what is the expected behavior?the ripple/wash on the tab should extend fully to the activated underline what is the actual behavior?there is a gap between the ripple/wash and the activated underline! image any other information you believe would be useful?for some reason the mdc-tab elements are only px in safari whereas theyre px matching the tab bar in other browsers
303932334,2373,https://api.github.com/repos/material-components/material-components-web/issues/2373,dprentiss,3,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting?google chrome version official build bit)mozilla x linux x applewebkit khtml like gecko chrome safari what os are you using?linux generic ubuntu smp fri feb utc x x x gnu/linux what are the steps to reproduce the bug?bug occurs when a button element is used to contain the mdc-toolbar__menu-icon in a temporary or persistent drawer.from drawer material components catalog div class=mdc-toolbar mdc-toolbar--fixed div class=mdc-toolbar__row section class=mdc-toolbar__section mdc-toolbar__section--align-start button class=demo-menu material-icons mdc-toolbar__menu-icon>menutemporary drawer
303590990,2366,https://api.github.com/repos/material-components/material-components-web/issues/2366,yguedidi,1,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting?all what os are you using?ubuntu what are the steps to reproduce the bug?add the mdc-tab--active class to a tab that is hidden by the tab scroller on load what is the expected behavior?the active tab should be visible the scroller scrolls to the page where the active tab is what is the actual behavior?the scroller doesnt scroll so the active tab is not visible
303304133,2360,https://api.github.com/repos/material-components/material-components-web/issues/2360,daneren2005,1,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting?firefox/chrome what are the steps to reproduce the bug?create a custom theme and click inside of a select while the focus is on the select the underline will be themed correctly but the select text will still be using color:rgba instead of the primary colors you selected it shouldnt matter but here is the theme i am applying in case it does: #app mdc-theme-primary af mdc-theme-primary-light caf mdc-theme-primary-dark d mdc-theme-secondary cbc mdc-theme-secondary-light fada mdc-theme-secondary-dark ae;} i am using mdc-vue-adapter but i was able to trace the problem back to material-components-web.min.css so i dont think that should matter the offending line is mdc-select:not(.mdc-select--disabled mdc-select__surface:focus mdc-select__label{color:rgba
302959470,2357,https://api.github.com/repos/material-components/material-components-web/issues/2357,rubenmendoza,2,0,0,0,0,0,add:el.classlist.add(activatedclass);remove:event.target.classlist.add(activatedclass
302903613,2353,https://api.github.com/repos/material-components/material-components-web/issues/2353,williamernest,1,0,0,0,0,0,fixes makes the label work like a standard label if the for attribute is specified clicking the label will focus the corresponding input
302829369,2350,https://api.github.com/repos/material-components/material-components-web/issues/2350,dpraul,1,0,0,0,0,0,js usage of mdc-list in particular in mdc-menu relies on mouseevent.target pointing to an mdc-list-item child-element of the list to correctly get the selected index see the mdc-menu foundation when decorative/positional child-elements of mdc-list-item are used i.e mdc-list-item__graphic mdc-list-item__meta mdc-list-item__text and mdc-list-item__secondary-text they can instead become the target of mouseevent breaking the current selection logic.without creating more complicated selection logic we can disable pointer-events on the child-elements of mdc-list-item ensuring mouseevent.target points to the mdc-list-item element even when child-elements are used.this also ensures ripples on mdc-list-item correctly trigger when checkboxes or other selectable items are used within mdc-list-item__meta or mdc-list-item__graphic .fixes
302437041,2342,https://api.github.com/repos/material-components/material-components-web/issues/2342,patrickrodee,1,0,0,0,0,0,update the select docs section about the full-fidelity component to include a heading about importing required components and a code block showing how to import mdc-list and mdc-menu .the heading should read as follows using mdc-select as a standalone componentthe code block should contain the following lines: scss@import material/mdc-list/mdc-list;@import material/mdc-menu/mdc-menu;@import material/mdc-select/mdc-select; reported in
302010892,2337,https://api.github.com/repos/material-components/material-components-web/issues/2337,3hson,1,0,0,0,0,0,when i click on an element it stays focused styasfocused happens in all browsers is this a normal behavior?how can i change it
299898613,2306,https://api.github.com/repos/material-components/material-components-web/issues/2306,williamernest,0,0,0,0,0,1,fixes added tests and demo to check for regression
299287416,2292,https://api.github.com/repos/material-components/material-components-web/issues/2292,SirAuron,1,0,0,0,0,0,"while setting up a project with csp rules the console keeps telling me that the browser refused to apply inline style because it violates the following content security policy directive unsafe-inline after a little bit of investigation i found out that the function settransformorigin in the textfield component sets the transform origin given a users click location param event evt key settransformorigin,value function settransformorigin(evt var targetclientrect evt.target.getboundingclientrect var evtcoords x evt.clientx y evt.clienty var normalizedx evtcoords.x targetclientrect.left var attributestring transform-origin normalizedx px center this.adapter_.setattr(style attributestring);} applies the transform-origin property by directly setting style attribute thus breaking the csp rule mentioned above.i was wondering if it is possible to change that function and make it csp compliant"
299137545,2288,https://api.github.com/repos/material-components/material-components-web/issues/2288,GilVieira,3,0,0,0,0,0,what mdc web version are you using?..what browser(s is this bug affecting?allwhat os are you using?windowswhat are the steps to reproduce the bug?i would like to put an icon to open a menu in each item in my list but when opening the menu it stays inside the container of the item not being visible the menu options is there a way to make the menu in the list items?! img
299055812,2285,https://api.github.com/repos/material-components/material-components-web/issues/2285,drcampbell,1,0,0,0,0,0,for issue
298914989,2280,https://api.github.com/repos/material-components/material-components-web/issues/2280,jvalst,1,0,0,0,0,0,bugsfollow the template below to ensure the quickest and most accurate response to your issue what mdc web version are you using what browser(s is this bug affecting?think every browser im testing in chrome what os are you using?windows what are the steps to reproduce the bug?see i set the required in the javascript on init the field is highlighted red what is the expected behavior?the highlighting should be set after the textfield has lost focus what is the actual behavior?the textfield has the red highlighting after init any other information you believe would be useful
297629557,2261,https://api.github.com/repos/material-components/material-components-web/issues/2261,aaronhudon,2,0,0,0,0,0,given the rapid change to mdc-web would it be feasible for the documentation site to serve up versioned documentation referring back to a specific version of documentation would help those that are using this package.e.g
297404768,2257,https://api.github.com/repos/material-components/material-components-web/issues/2257,nullsmegh,1,0,0,0,0,0,is there a specific api to add them or it is not supported since ive thoroughly checked the documentation and couldnt find any like having svg icons
297216071,2250,https://api.github.com/repos/material-components/material-components-web/issues/2250,dpraul,1,0,0,0,0,0,what mdc web version are you using?v what browser(s is this bug affecting?chrome bit what os are you using?windows what are the steps to reproduce the bug add mdc-theme-background or any dark value to demos/common.scss run the dev server visit localhost:/tabs.html observe black tab indicator what is the expected behavior?indicator becomes a light color on dark background what is the actual behavior?indicators are hard-coded to use dark colors
296224157,2229,https://api.github.com/repos/material-components/material-components-web/issues/2229,jonhue,0,0,0,4,0,0,expanding on acdvorak i finally had time to implement this feature.its still far from perfect though swiping from the left edge of the screen or the right of used in rtl-mode does not gradually open the drawer like in many android apps instead it opens the drawer after a gesture ended.it does use the same mechanism as the drawer closing gesture it opens the drawer after a gesture completed that had a length of of the drawers width or more to check whether or not a gesture was made with the intention to open the drawer i settled on checking if it started than px away from the edge where the drawer is located.some mechanism that could be implemented as well if you think that this would be beneficial is to check whether a gesture which is currently considered to intend a drawer opening but also scrolled down px or more should not be considered this however could only be checked after a gesture completed.i would love to hear what you think some ideas how we could implement a gradual drawer opening as the gesture happens.(please excuse the changed package files my briefly setup environment caused them to change
296138106,2227,https://api.github.com/repos/material-components/material-components-web/issues/2227,rsouthgate,1,0,0,0,0,0,bug what mdc web version are you using what browser(s is this bug affecting?all what os are you using?mac os what are the steps to reproduce the bug a look at the codepen the underline should be visually aligned vertically but is not
295258249,2213,https://api.github.com/repos/material-components/material-components-web/issues/2213,stolenricecakes,3,0,0,0,0,0,what mdc web version are you using material-components-web version requires material/animation material/auto-init material/base material/button material/card material/checkbox material/chips material/dialog material/drawer material/elevation material/fab material/form-field material/grid-list material/icon-toggle material/layout-grid material/line-ripple material/linear-progress material/list material/menu material/radio material/ripple material/rtl material/select material/selection-control material/slider material/snackbar material/switch material/tabs material/textfield material/theme material/toolbar material/typography what browser(s is this bug affecting?n/a sass build error what os are you using?red hat enterprise linux workstation release maipo what are the steps to reproduce the bug npm install save material-components-web echo e mdc-theme-primary n@import material-components-web/material-components-web.scss test.scss sass i node_modules test.scss material-components-web.cssproduces the following stack trace error base-level rules cannot contain the parent-selector-referencing character on line of shared/bonus/node_modules/@material/checkbox/_mixins.scss in mdc-checkbox-container-colors from line of shared/bonus/node_modules/@material/checkbox/mdc-checkbox.scss from line of shared/bonus/node_modules/material-components-web/material-components-web.scss from line of test.scss use trace for backtrace what is the expected behavior?should produce a css file from the sass with custom primary color what is the actual behavior?produces sass error and no css file is created any other information you believe would be useful
295079135,2209,https://api.github.com/repos/material-components/material-components-web/issues/2209,KayvandenHeuvel,1,0,0,0,0,0,what mdc web version are you using?v what browser(s is this bug affecting?tested in chrome firefox edge what os are you using?windows what are the steps to reproduce the bug?go to the following pen set an initial selected item but the label wont update edit:we also tested it with an option to reset the mdc-select according to the package description we should do the following the index of the currently selected option set to if no option is currently selected changing this property will update the select element.to reproduce this bug we created the following pen what is the expected behavior?we expected the label would float above the selected text what is the actual behavior?it doesnt float any other information you believe would be useful
294784033,2196,https://api.github.com/repos/material-components/material-components-web/issues/2196,j-o-d-o,6,0,0,0,0,2,so this might come off as whining but would it be possible to add a little bit more information to the prs especially when it is about breaking changes like whats the reasoning are there more to come in the future that are similar etc just as an example the latest removing of the cssonly select the pr message is remove css only version of select.just a little more information like kfranqueiro added later in the discussion as a response would be nice to have
294322912,2183,https://api.github.com/repos/material-components/material-components-web/issues/2183,piotr-cz,1,0,0,0,0,0,snackbar doesnt close when any element on page receives focus event while snackbar is opened and snackbar has empty action text.fixes steps to reproduce go to delete action text value click on show press shift-tab to focus some element on the page like action text input element)snackbar should close but it doesnt
294103557,2182,https://api.github.com/repos/material-components/material-components-web/issues/2182,RobertSmits,1,0,0,0,0,0,there exists a problem in the mdcselect that when placed within a parent element with the transform css property the menu gets positioned wrongly.in this pen i used a select inside a dialog but the dialog can be anything with the transform property.the issue here is that the menu has position fixed and gets calculated relative to the viewport.but a fixed element gets positioned relative to the viewport or for some absurd reason relative to the nearest parent with a transform set to it
293991692,2176,https://api.github.com/repos/material-components/material-components-web/issues/2176,lynnjepsen,1,0,0,0,0,0,match the outlined variant in text field update select to use notched outline depends on
293921525,2166,https://api.github.com/repos/material-components/material-components-web/issues/2166,mgr34,1,0,0,0,0,0,what mdc web version are you using what browser(s is this bug affecting?chromium firefox all what os are you using?linux archlinux what are the steps to reproduce the bug?set a label whose text length is greater than the largest text length of the menu/select options the drop down arrow will overlay the label what is the expected behavior?that maxtextlength is the length of the largest piece of text this sets the surface width this should also measure label width what is the actual behavior?upon initialization resize is called it looks at the select options and determines a max width which is set to the select surface however it does not factor in label size for example if you have a label titled page list whose text content is max width would be derived from this places the drop down icon over of the label to be specific the background-image set on mdc-select overlays the label text i believe this is because the label is longer than the text looked at to determine width codepen demo
293802518,2164,https://api.github.com/repos/material-components/material-components-web/issues/2164,jfily,1,0,0,0,0,0,"hello,as far as i know there is no way to add an icon signifier for textfield like described in material design specs! image mdc trailing icon only works with boxes and outlined textfields.ive done a quick workaroud but didnt fully test it"
293314657,2154,https://api.github.com/repos/material-components/material-components-web/issues/2154,jrajav,4,0,0,0,0,0,question what is the proper way to autofocus a text field in a dialog? this is an unorthodox issue i know but ive been wrestling with various ways to tackle this for quite some time now and im stumped the use case for this is a dialog being popped up to rename one item in a list upon clicking a button this involves a simple dialog with a single text input a cancel button and an accept button all the usual ways to manually focus or autofocus a text field or directly on the input either dont work or focus it briefly then immediately unfocus i realized after some research that this is due to the focus trap the dialog is setting up however there doesnt seem to be any way to configure that focus trap to focus any element of the dialog aside from the accept button does such a way exist or am i going about this the wrong way
292729592,2133,https://api.github.com/repos/material-components/material-components-web/issues/2133,pndewit,1,0,0,1,0,0,if im correct material design doesnt really have a select component but do have a text-field with dropdown capabilities so i updated the select components layout to match or at least be close to the text-field component layout.edit its also missing a margin that is present in the text-field but i wasnt sure about adding it
292611979,2125,https://api.github.com/repos/material-components/material-components-web/issues/2125,dpraul,1,0,0,0,0,0,closes
292195102,2119,https://api.github.com/repos/material-components/material-components-web/issues/2119,gedw99,6,0,0,0,0,0,the library is getting very strong and we are using this on a few projects on mobile web and desktop.one thing that would be great for user cognitive load is swipable tab navigation.at the moment a user has to navigate by pressing on each tab but material design allows swiping on the tabs contents left or right to force a navigation.it is a sensible move to implement this if would mean event bubbling issues
292061036,2116,https://api.github.com/repos/material-components/material-components-web/issues/2116,williamernest,0,1,0,0,0,0,remove css only verion of select
291505748,2088,https://api.github.com/repos/material-components/material-components-web/issues/2088,j-o-d-o,2,0,0,0,0,0,bugtextfield ripple not working properly in dialogs what mdc web version are you using what browser(s is this bug affecting?chrome what os are you using?win what are the steps to reproduce the bug?put textfield with ripple effect in dialog works properly outside of dialogs as shown in the codepen what is the expected behavior?ripple should extend all the way till the end of the textfield what is the actual behavior?ripple does not extend all the way to the end:! text-field-bug
291407595,2078,https://api.github.com/repos/material-components/material-components-web/issues/2078,bwobrien,0,0,0,1,0,0,replaces translatex percentage values with absolute pixel values the goal here is to shift the label horizontally back towards the leading edge of the text field since the leading icon shifts the label towards the trailing edge since it was shifted a fix amount just shift it back the same fixed amount.fixes
290954105,2044,https://api.github.com/repos/material-components/material-components-web/issues/2044,ginavasiloff,2,0,0,0,0,0,bug what mdc web version are you using what browser(s is this bug affecting?google chrome version official build bit)others what os are you using?macos high sierra version what are the steps to reproduce the bug run the demo server go to localhost:/textfield.html observe the look and behavior of the full width textfield with a leading icon textfieldicon what is the expected behavior?i expect to have the field value/placeholder not overlap with the leading icon what is the actual behavior?the field value and icon are overlapping with the leading icon making the text difficult to read any other information you believe would be useful
290928904,2042,https://api.github.com/repos/material-components/material-components-web/issues/2042,RavenHursT,3,0,0,0,0,0,be it that many data-store backends store temporal data in a comprehensive date-time data point and not as two different points of data...and be it that many ui/ux usecases exist to have a user pick or set a singular datetime data point rather than a step process for setting two data points...and be it that the added step and complexity of compiling two data points date and time add complexity and added layers of testing in order to integrate and compile the two points of date and time data into a singular datetime data point that can be sent down for backend data-stores to persist...would it not be possible to consider the possibility of adding to the material design guidelines/spec an integrated component that allows for a user to pick/choose/set a singular datetime value?for example while clearly incomplete there seems to be a great start to such a component at least in ui/ux design here
290602519,2030,https://api.github.com/repos/material-components/material-components-web/issues/2030,djensen47,2,0,0,0,0,0,i think this is a great project a great community and it produces high quality code but it feels like its in a constant state of refactor getting further not closer from a beta release if you look at the change log each release seems to have more breaking changes than anything else i do also understand the breaking changes are making things better. would it be possible to get a higher level status of the project to understand what is going on? i realize mdc web is pre-beta but its been that way for a very long time plus it is really really difficult to keep up when the basics like buttons and fields break every weeks if we had one of the project leads explain the high level goals and/or a high level roadmap i think it would help dates are not as important as understanding what done looks like for version and i currently feel like done isnt visible to the community i took a look at pivotal tracker and i can see awesome progress but i cant see the direction.again kudos great project great work just want to know where its all going thanks and sorry my engineering manager dark side really wanted to come out and say something
290183463,2020,https://api.github.com/repos/material-components/material-components-web/issues/2020,griest024,4,0,0,4,0,2,closes this is ready for code review. engineering outline x accordion x block toggleexpansion when target is not appropriate x docs/readme x rtl x theming accessibility x tests x scss mixins and partials x define keyframes x tab key selection no js variant x closure compatibilityi need guidance on a few things i set the inner html of the expansion icon(s to expand_more in the foundation because the spec shows that exact icon is this preferable to actually inserting the icon into the header manually and not having the user create the icon at all the spec doesnt say how to style the text in the body or footer sections should i use the label text style sp roboto regular black the theming is still a bit weak with dark theme going away what is the proper way to implement component theming in a dark context
288450976,1961,https://api.github.com/repos/material-components/material-components-web/issues/1961,wulf2468,11,0,0,0,0,0,bugs what mdc-web version are you using whichever version this demo is using what browser(s is this bug affecting firefox chrome ie edge as up to date as possible as of this issue what os are you using windows bit what are the steps to reproduce the bug go to tab-focus the first select menu pick a food group press the f key on your keyboard observe the first select item starting with f is not selected open the select menu by clicking it or by pressing the down arrow or spacebar keys on your keyboard press the f key on your keyboard observe the first select item starting with f is not selected what is the expected behavior the first select item starting with f should be selected which in this case is fruit pushing the f key again very quickly after the first should cause the second select item starting with f to be selected which in this case is fats oils and sweets constantly pushing the f key should cycle through all options in order as they appear additionally typing f and then r right after one another should bring up the first select item starting with fr this should work when the menu is closed or open as long as it has focus what is the actual behavior nothing happens when the select menu has focus and typing occurs the menu does not react in any way and the selected item does not change any other information you believe would be useful if you know what items are in the drop down you should be able to type it out until it becomes the selected item if there is only one item that starts with an f then you can tab into the select menu press f and then tab to the next form element this is the default select menu behavior in all the browsers i mentioned above and can be tested on the same page using the css only version of the select menu some common examples of known select items would be month day and year for birthdays or other dates credit card information with month and year countries us states and their abbreviations canadian provinces and their abbreviations etc a quantity for the number of product that you want when ordering something shoe or other clothing sizes day of the week and their abbreviations
287664167,1937,https://api.github.com/repos/material-components/material-components-web/issues/1937,ruwaroshan,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting all browsers and devices what are the steps to reproduce the bug add column mdc layout grid.
287310107,1918,https://api.github.com/repos/material-components/material-components-web/issues/1918,yuheiy,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome also others what os are you using?mac os x what are the steps to reproduce the bug?if i operate the radio button with the keyboard snackbar will not work properly go to operate the radio button with the keyboard snackbar will not be hidden
287263827,1916,https://api.github.com/repos/material-components/material-components-web/issues/1916,acdvorak,1,0,0,0,0,0,breaking change sass source maps and hot reloading no longer work on demo pages we can address those issues in future prs if they become a problem in addition the mdc_wrap_css_in_js env var now defaults to false .this change makes it possible to dynamically switch themes at runtime follow-up pr fixes the fouc on all demo pages fixes sporadic rendering errors on all demo pages that call getcomputedstyle on page load e.g ripple allows us to remove css polling from our demo js follow-up pr reduces chrome devtools memory leaks after hot reloading
286777793,1892,https://api.github.com/repos/material-components/material-components-web/issues/1892,ribrdb,2,0,0,0,0,0,feature requestplease add support for prefixes and suffixes as shown here seems like its probably pretty similar to the leading and trailing icons you already support
285326109,1843,https://api.github.com/repos/material-components/material-components-web/issues/1843,djensen47,1,0,0,0,0,0,text field boxes are optional for text fields according to the spec the mdc-select component is a form of text field other components such as dropdown menus and pickers can be nested in text fields to make input easier behavior: the current documented behavior for mdc-select is that it is always inside of a text field box. expected behavior: a text field box should be optional for mdc-select---please forgive me if this issue has already been raised i searched through the issue but didnt find anything relevant but there still might be also i didnt read through the code to see if there is an undocumented feature
285208713,1841,https://api.github.com/repos/material-components/material-components-web/issues/1841,ocavue,3,0,0,0,0,0,what mdc-web version are you using?v what browser(s is this bug affecting?chrome what os are you using?macos high sierra what are the steps to reproduce the bug open this url which is hosted by google adjust windows width from minimum to maximum what is the expected behavior width of browser px height of toolbar px what is the actual behavior width of browser px height of toolbar px should be any other information you believe would be useful?i found this bug from here which is another demo page hosted by google i can find some gap between toolbar and drawer at some width.
284884237,1838,https://api.github.com/repos/material-components/material-components-web/issues/1838,ruwaroshan,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting mac safari ipad iphone what os are you using ios what are the steps to reproduce the bug open above link with ios device with latest version click on the hamburger menu icon to open the drawer tap outside of the drawer to close the drawer you can see closing drawer very slowly what is the expected behavior drawer should open and close smoothly what is the actual behavior the close animation of the drawer is janky/laggy
284372968,1835,https://api.github.com/repos/material-components/material-components-web/issues/1835,prateekbh,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome also others i guess what os are you using?mac what are the steps to reproduce the bug create a select box with very small options e.g opt opt opt put the surface label bigger than options length e.g select an option when selection an option in browser notice that floating label is broken what is the expected behavior?if the floating label is quite big to display may be add ellipses to it what is the actual behavior?the text overflows out of the select viewport
284318691,1833,https://api.github.com/repos/material-components/material-components-web/issues/1833,mojighahar,1,0,0,0,0,0,hiyou are using roboto font that hasnt good appearance in some languages and its hard to change font in compiled css or even in sass without modifying main codes.if is possible use an global css variable that make it easier.for persian arabic pashto a desired font is iransans that attached below.for compare i write some words in both persian and english: hello world fa-en-sanslight is ultralight size of this font(because of copyrights i cannot put all type of fonts main package has types of fonts!) iransans_ultralight.ttf.tar.gz
283054622,1800,https://api.github.com/repos/material-components/material-components-web/issues/1800,kfranqueiro,0,0,0,1,0,0,this fixes by registering touch/mouse up event handlers at the documentelement level at the time that a down event is triggered.it also adds an instance property to track the previous event for a bit of time to avoid triggering activation animation twice for the same event due to browsers firing mouse events after touch events pr was inspired partly by discussion on which previously attempted to resolve this issue
282738167,1798,https://api.github.com/repos/material-components/material-components-web/issues/1798,rhroyston,5,0,1,1,0,1,image
282734652,1797,https://api.github.com/repos/material-components/material-components-web/issues/1797,rhroyston,0,2,0,0,0,0,bravo re the mdc-web package you guys nailed it simple i really love mdc-web thank you.my feature request idea instead of requiring developers to write for example data-mdc-auto-init=mdcicontoggle why not simply data-mdc-auto-init=true this simplifies implementation i.e one does not need to know or look up the component name seems like your mdc-web script could have a switch based on this.classlist.contains to identify what should be initialized when that dataset is seen....just an idea
282477482,1792,https://api.github.com/repos/material-components/material-components-web/issues/1792,kfranqueiro,1,0,0,0,0,0,we currently have a multiselect demo in the select demo page however this demo doesnt really sync up with anything in particular in the material guidelines and moreover styling native selects is notoriously difficult and inconsistent in terms of what different browsers allow/prevent see and for examples).instead we should implement a demo of selection controls within a mdc list e.g the example seen here in the guidelines then decommission the multiselect example and preferably remove its inconsistently-successful-across-browser styles to reduce mdc selects payload).note that was previously reported involving checkboxes inside lists so we may need to deal with that first if it hasnt been fully remedied by recent updates to mdc list styles
282109234,1780,https://api.github.com/repos/material-components/material-components-web/issues/1780,jamesmfriedman,2,0,0,0,0,0,sorry in advance for the open ended issue!ive built the rmwc react wrapper for this library and im having a hard time keeping up with changes because the docs are consistently out of date with the working examples my current process for updating rmwc to the next mwc version is like so read the changelog go read through the docs of the changed features implement changes get bugs filed because i implemented the doc version open the working examples and see that the docs were wrong dig through the source code to be absolutely sure...is there anyway we could close this gap maybe there could bel a requirement before a pr gets merged in that the associated docs are updated it seems to happen pretty consistently loving using the lib just wish i could trust the docs on it
281953074,1761,https://api.github.com/repos/material-components/material-components-web/issues/1761,lynnjepsen,2,0,0,0,0,0,using the sass color mixins we should demonstrate how to create a theme which works on a dark background
281692839,1753,https://api.github.com/repos/material-components/material-components-web/issues/1753,acdvorak,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome only tested in v firefox and safari seem unaffected what os are you using?macos sierra what are the steps to reproduce the bug view the button demo page in chrome mouse down but not up on a filled or stroked button compact secondary and icon seem to trigger the bug most reliably what is the expected behavior?the ripple wash should cover the entire container what is the actual behavior?there is a px gap on one or both sides of the ripple wash any other information you believe would be useful?! screenshot of ripple gaps
281278296,1747,https://api.github.com/repos/material-components/material-components-web/issues/1747,YuoMamoru,1,0,0,0,0,0,bugs what mdc-web version are you using what browser(s is this bug affecting?crome and any browser what os are you using?windows what are the steps to reproduce the bug go to click a mdc-select in the page click the list under steps to reproduce the bug what is the expected behavior?if you click the point on li tag with class=mdc-list-item the menu should close what is the actual behavior?if you click the point on li tag with class=mdc-list-item the menu does not close any other information you believe would be useful?i think that it is an issue not to check whether the element clicked is part of its own menu in handledocumentclick_(evt on mdc-menu/simple/foundation.js
281223910,1746,https://api.github.com/repos/material-components/material-components-web/issues/1746,patrickrodee,1,0,0,0,0,0,due to an unfortunate bug in scss-parser the inline comments in the property-values map were being prepended to the following lines in the build process to transform for bazel effectively commenting out any line that appeared directly after an inline comment in the map while that bug is still present replacing the inline comments with multiline comments reduces the impact of the bug.for future reference comments in a map should be multiline comments until we find a real solution to this
280991245,1741,https://api.github.com/repos/material-components/material-components-web/issues/1741,MishUshakov,1,0,0,0,0,0,hey guys i created a very small and handy css-only tooltip for using with data attributecodepen what is the expected behavior?tooltips will be supported with css and adapter approaches what is the actual behavior?no tooltips are supported yet thank you
280632653,1737,https://api.github.com/repos/material-components/material-components-web/issues/1737,kfranqueiro,1,0,0,0,0,0,refs there will be separate prs to update/clean up menu and drawer styles which depend on list.also refs since these updates resolve discrepancies when box-sizing is specified on all elements.also updates demo index page dom and styles to accommodate new padding behavior and make entire rows clickable to match states shade region.breaking change list padding is now per-item rather than across the entire list separators now span the entire list width by default with the addition of a mdc-list-divider--padded modifier class to achieve the old default behavior
280134956,1723,https://api.github.com/repos/material-components/material-components-web/issues/1723,xSirrioNx,0,0,0,0,0,2,is it a good idea to add default property for all variables in variables.scss files for all components?it allow to write your own scss file redefine variables in it and include it before including all other components.example custom_variables.scss mdc-toolbar-row-height px material/toolbar/_variables.scss mdc-toolbar-row-height px default material-components-web.scss include custom_variables include material/toolbar/variablesso after compiling material-components-web.scss your toolbar height will be px
279962247,1714,https://api.github.com/repos/material-components/material-components-web/issues/1714,treybrisbane,2,0,0,0,0,0,currently as of v mdc-textfield s root index.js file does not export any of the following mdctextfieldbottomline mdctextfieldbottomlinefoundation mdctextfieldhelpertext mdctextfieldhelpertextfoundation imports for these symbols were added to the root index.js as part of however they were not subsequently exported.by not exporting these symbols from the root index.js we provide no way for consumers to access them from dist/mdc.textfield.js bundle consumers are instead forced to access them via their es modules which can be problematic for some see
279701707,1701,https://api.github.com/repos/material-components/material-components-web/issues/1701,j-o-d-o,4,0,0,0,0,4,i found some time yesterday so i decided i set up a first draft for a tooltip component for mdc even thou most of the mdc architecture is quite straightforward i am quite new to it and i might have messed up some things here and there.------ so here is a little technical breakdown: the tooltip is represented by a span and can either be placed inside the controlling element or outside with the for attribute pointing to the id of the controlling element if it is placed inside the tooltip element will be moved outside of the controlling element that way the controlling element can have overflow hidden and the tooltip can still show up properly the position will be calculated with the width and height of the controlling element and the tooltip element as well as the offsettop and offsetleft from the controlling element the tooltip itself has the position absolute the tooltip shows on hover focus and touchstart on these events it will move from the center of the controlling element to the specified direction when it hides it just fades out after fading out it will be recentered to the controlling element i tried to follow as good as possible.for more infos on how to use them look at the readme or the demo site todos/unclear should there be a delay after hover to show the tooltips should the tooltips scale up down on show hide like in mdl check if tooltip move out of window if yes chose another direction what z-index should the tooltip element have add closure compatibility
279651112,1700,https://api.github.com/repos/material-components/material-components-web/issues/1700,mjwwit,5,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?mobile safari what os are you using?ios what are the steps to reproduce the bug on an ios device go to the drawer demo page open the temporary drawer close it what is the expected behavior?the drawer closes with a smooth animation what is the actual behavior?the drawer jerks back and forth and takes forever to completely close any other information you believe would be useful?has been tested on iphone iphone s ipod touch th gen ipad air the bug seems to only occur since the ios update
279602436,1699,https://api.github.com/repos/material-components/material-components-web/issues/1699,tyronedougherty,3,0,0,0,0,0,bugsfollow the template below to ensure the quickest and most accurate response to your issue what mdc-web version are you using material/textfield what browser(s is this bug affecting google chrome latest stable as of time of post what os are you using mac os high sierra what are the steps to reproduce the bug go to the demo page tick the required checkbox on the first text field email address click on the text field and then click off of it making it an invalid input inspect the element and observe that the mdc-text-field__label and other red colors on the text field component are d expected click the checkbox that turns it into the dark theme again inspect the mdc-text-field__label element and others still has a color property of d unexpected what is the expected behavior the red colors on an invalid text field component using the dark theme should use mdc-text-field-error-on-dark ffee instead of continuing to use mdc-text-field-error-on-light d what is the actual behavior the red colors on an invalid text field component using the dark theme continues to use mdc-text-field-error-on-light d any other information you believe would be useful?as a side note ive discovered that the mdc-text-field-error-on-dark color ffee is actually incorrect according to the material design guidelines on text field errors the color should actually be red a which maps to ff according to the color guide
279213439,1689,https://api.github.com/repos/material-components/material-components-web/issues/1689,lynnjepsen,0,0,0,0,0,1,we will create a new mdc exposed select whose drop down has a different behavior than the regular mdc select mdc select positions the menu such that the selected element within the menu appears directly above the select box.exposed select will display the drop down directly beneath the select box
279212895,1688,https://api.github.com/repos/material-components/material-components-web/issues/1688,lynnjepsen,1,0,0,0,0,0,we will add two new methods to mdcsimplemenu setanchorcorner which lets the client specify which corner of the anchor the top left corner of the menu should align to setanchormargin which lets the client specify the margin around the anchor this lets clients specify the amount of pixels between where an anchor ends and a menu begins it also handles negative margins if clients want their menu to overlap their anchor
279189510,1687,https://api.github.com/repos/material-components/material-components-web/issues/1687,amsheehan,1,0,0,0,0,1,previously i believe the specificity was warranted because of some other demo pages outside of the mdc web catalog page since this is no longer the case i think we should change it back to the demo selector.instead of mdc-radio.demo-radio--custom use demo-radio--custom also if were trying to use bem here we are using it incorrectly for there to be a modifier class we need a block or element to modify.for instance in demos/radio.html we have elements with: class=mdc-radio demo-radio--custom this should read class=mdc-radio demo-radio demo-radio--custom to adhere to bem style
277653091,1652,https://api.github.com/repos/material-components/material-components-web/issues/1652,mianuddin,1,0,0,0,0,0,change display font size to rem to result in px .fixes
277126973,1644,https://api.github.com/repos/material-components/material-components-web/issues/1644,grosmar,2,0,0,0,0,0,as described here check image on the right side)there should be a possibility for adding not only icon but also text-based end-detail for list items.at this moment as the width of the mdc-list-item__end-detail set to px its not possible without overriding the property to add for example timestamp content here
275980782,1626,https://api.github.com/repos/material-components/material-components-web/issues/1626,evilchuck,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting safari what os are you using ios iphone what are the steps to reproduce the bug go to the textfield demo page what is the expected behavior bottom line should be flat what is the actual behavior bottom line has rounded edges! image
275110544,1614,https://api.github.com/repos/material-components/material-components-web/issues/1614,Rickyfs,1,0,0,0,0,1,i want to add some extra features into mdc-persistent-drawer however there is events like pointerup pointerdown click pointermove these are completely useless and i cant find way to remove them tried to unbind off override but no luck
274905594,1608,https://api.github.com/repos/material-components/material-components-web/issues/1608,ricardobrandao,2,0,0,0,0,0,bugs what mdc-web version are you using except for base that is what browser(s is this bug affecting chrome bits what os are you using macos what are the steps to reproduce the bug please write the steps which need to be taken in order to reproduce the bug these steps should be as detailed as possible e.g go to this url start typing on the textarea observe the components behavior the top border is partially overlapped by the label what is the expected behavior the top border should stay the same what is the actual behavior the top border is partially cut near the label any other information you believe would be useful?
273696662,1587,https://api.github.com/repos/material-components/material-components-web/issues/1587,jamesskyoung,1,0,0,0,0,0,what mdc-web version are you using?latest what browser(s is this bug affecting?all what os are you using?mac windows and linux what are the steps to reproduce the bug?go to the textfield demo was not found on this server
272291611,1569,https://api.github.com/repos/material-components/material-components-web/issues/1569,patrickrodee,1,0,0,0,0,0,adds an mdctextfield accessor helptextvalue to get/set the textcontent of the help text field tests have been added as well as readme documentation i tried to make the accessor name helptextvalue similar to the existing helptextelement but the name helptextvalue is a little verbose id love some feedback and am totally open to changing the accessor name.fixes
271214387,1547,https://api.github.com/repos/material-components/material-components-web/issues/1547,ErraticFox,2,0,0,0,0,0,i was wanting to make a request for a persistent drawer that wouldnt affect the width of the toolbar because it would open up below the toolbar i would say that this perfectly follows suit with material guidelines as there are plenty of material designed websites that google owns that have this feature two of these websites are google and inbox by google
270440408,1521,https://api.github.com/repos/material-components/material-components-web/issues/1521,stasson,1,0,0,0,0,0,hello mdc teami have been working on this vuejs integration project vue-mdc-adapter for the last month i must say i have been very impressed by the work you guys do i think my project has reached a point where it may be worth sharing vue-mdc-adapter is using the foundation aproach goal is to use vues reactivity system wherever it make sense and keep the markup/apis as simple and as close as possible to mdc for now i have been mostly focused on figuring out the right vue patterns and get a first working implementation of each component i guess next comes api refining and a big validation phase if the project takes off ill have to take care of the perf as well there are a couple of integration tricks and issues i found while integrating i guess ill gather my notes and share it with you are github issues the preferred way to send you some feedback also today im wondering if i should do a pr and add my library to your list of integrations i definitely need some feedback on the apis and it may help me find people whod contribute i went through the criteria and im not sure about the following statement serve components in an -la-carte delivery model as of today i have only one package people can cherry pick es components using webpack/rollup but i didnt create one npm package per component do i need to do so to meet the criteria thxs for your feedback
269513172,1505,https://api.github.com/repos/material-components/material-components-web/issues/1505,djensen47,1,0,0,0,0,0,according to the material design spec placeholder text can be displayed in an empty text field until input is entered also as the user types into the text field input text replaces any placeholder text.when there is a fullwidth textfield with a placeholder it currently clears the placeholder on focus the expected result is that the placeholder stays until the use starts typing input
269424340,1503,https://api.github.com/repos/material-components/material-components-web/issues/1503,anton-kachurin,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?internet explorer edge what os are you using?windows what are the steps to reproduce the bug open the demo page scroll down to with javascript examples check the default checkbox click toggle indeterminate click on the checkbox what is the expected behavior?in chrome and firefox the checkbox will be unchecked at this point what is the actual behavior?in internet explorer its checked
267934794,1466,https://api.github.com/repos/material-components/material-components-web/issues/1466,deap82,8,0,0,0,0,0,feature requestwhen using the snack bar component in a spa website it would be useful if there was a method to call that would instantly hide w animation the snackbar if it is currently showing and remove any messages that might be in the queue i would call this when the user navigates to a new view of the app and as such has decided messages from the current view are not of interest having messages shown/popup in the destination view just causes confusion
267805554,1464,https://api.github.com/repos/material-components/material-components-web/issues/1464,kfranqueiro,6,0,0,0,0,0,see up in
267011298,1455,https://api.github.com/repos/material-components/material-components-web/issues/1455,kfranqueiro,1,0,0,0,0,0,we could probably manually test this by throwing in a box-sizing rule set to content-box and border-box in demos/common.scss to see if anything obviously breaks.it looks like several components already account for box-sizing but ill leave everything unchecked here until we actually test mdc-button mdc-card mdc-checkbox mdc-dialog mdc-drawer mdc-fab mdc-form-field mdc-grid-list mdc-icon-toggle mdc-layout-grid mdc-linear-progress mdc-list mdc-menu mdc-radio mdc-ripple mdc-select mdc-slider mdc-switch mdc-tabs mdc-textfield mdc-toolbar
266352178,1440,https://api.github.com/repos/material-components/material-components-web/issues/1440,eligao,1,0,0,0,0,0,what mdc-web version are you using?.(as on but im not sure since was just released what browser(s is this bug affecting?chrome mozilla windows nt win x applewebkit khtml like gecko chrome safari what os are you using windows rs android what are the steps to reproduce the bug open in the inspector switch the device size emulator to a phone e.g iphone or simply hook up an android phone in the remote inspector in the inspector add the following custom css: css box-sizing border-box click show to show a snackbar what is the expected behavior?a snackbar shows up filling the whole width of the screen.(i have changed to the dark theme to make it more clear)! material-components-web appspot com_snackbar html iphone what is the actual behavior?a snackbar shows up leaving its right side a margin.! material-components-web appspot com_snackbar html iphone any other information you believe would be useful?it seems the snackbar component as well as some other components are designed with box-sizing content-box in mind however in the case when box-sizing border-box is set globally which happens very often the box-sizing of the snackbar gets overwritten easily.adding this css seems to address this problem but can it be done more elegantly? css.mdc-snackbar box-sizing content-box
265958821,1435,https://api.github.com/repos/material-components/material-components-web/issues/1435,marioavs,1,0,0,0,0,0,what mdc-web version are you using what are the steps to reproduce the bug run the demo server it is also present in the demo site go to localhost:/textfield.html check the dark theme option for the full functionality js component second textfield component this step is only needed to make more evident the label coloring tab-focus on the full functionality js component second textfield component observe the label color what is the expected behavior the label should be displayed with primary color for focused textfield components what is the actual behavior the label is displayed with the normal idle color as if it would be a non focused textfield component any other information you believe would be useful it looks like the following is needed and has been removed from packages/mdc-textfield/mdc-textfield.scss for the mdc-textfield--focused class: @include mdc-theme-prop(color primary
265765465,1429,https://api.github.com/repos/material-components/material-components-web/issues/1429,gjdev,2,0,0,0,0,0,mdcsliderfoundation.destroy contains the following code: this.adapter_.deregisterinteractionhandler(mousedown this.mousedownhandler_);this.adapter_.deregisterinteractionhandler(pointerdown this.mousedownhandler_);this.adapter_.deregisterinteractionhandler(touchstart this.mousedownhandler_); that should be: this.adapter_.deregisterinteractionhandler(mousedown this.mousedownhandler_);this.adapter_.deregisterinteractionhandler(pointerdown this.pointerdownhandler_);this.adapter_.deregisterinteractionhandler(touchstart this.touchstarthandler
265029858,1417,https://api.github.com/repos/material-components/material-components-web/issues/1417,solidluis,2,0,0,0,0,0,hi i found that there is no material design component for file input why is that
263801062,1398,https://api.github.com/repos/material-components/material-components-web/issues/1398,pndewit,6,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome version official build bit))user agent mozilla macintosh intel mac os x applewebkit khtml like gecko chrome safari what os are you using?macos sierra version what are the steps to reproduce the bug open snackbar demo page snackbar settings should be left as is only dismiss on action enabled click the show button twice and switch browser tab within the ms timer which should close the first snackbar and open the second one switch back to the snackbar demo tab and the snackbar never closes even when setting focus on other elements what is the expected behavior?the snackbar should close what is the actual behavior?it doesnt close any other information you believe would be useful?i was digging through the snackbar component and found out that it gets focus when switching tab to the tab that is showing the snackbar when it has focus it doesnt close expected behaviour the blur handler should then kick in when moving focus to some other element but afaik the blur handler doesnt trigger any more i am not sure yet why the blur handler does kick in when performing the steps above but clicking the show button only once at step besides the actual bug id also like to know why the snackbar gets focus when switching tab shouldnt it just continue or restart the snackbar timer for closure? edit :found a dirty workaround manually set the snackbarhasfocus variable to false when the visibility change handler is triggered make sure the mdc visibility change handler is run first by using settimeout as it sets the snackbarhasfocus variable to true and there is a snackbar queue
263026226,1387,https://api.github.com/repos/material-components/material-components-web/issues/1387,j-o-d-o,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome version bit)ms edge what os are you using?windows what are the steps to reproduce the bug?the bug occurs on the official demo site but also in my own applications what is the expected behavior?menu should open without scrollbar what is the actual behavior?menu opening animation includes scrollbar until it is fully opened looks ugly.! bug_mdc
262226874,1378,https://api.github.com/repos/material-components/material-components-web/issues/1378,rhroyston,1,0,0,0,0,0,google delivers huge value thats probably why google is twice the size of amazon in market cap terms after several weeks maybe months of dealing with mdc-webs behavior i feel compelled to share constructive feedback this may not be the appropriate channel for that i apologize i appreciate your work and skill keep it simpleframeworks come frameworks go microsoft fabric is already doomed doa because they force feed react and/or angular on their users no particular js pattern whatsoever should be required to use mdc-web e.g dialog custom events are unnecessary javascript is rather easy and intuitive yet you use strict mode and sophisticated patterns which while displaying superior coding skill scares off of your consumers look at your demos source code for the snackbar or dialog iifes with global as an argument what is that its unnecessary and introduces complexity with no added value it actually destroys value the trend is not your friend.! image
261468654,1364,https://api.github.com/repos/material-components/material-components-web/issues/1364,kfranqueiro,1,0,0,0,0,0,this pr has multiple commits across packages which i intend to merge without squashing for the sake of changelog and versioning.this pr adds support to mdc-theme-prop for a new optional parameter which will emit supports clauses around its rules to exclude edge the rest of the sass updates in this pr use that parameter in specific places that singularly cause display glitches in edge in those components i mention this in the readmes so that hopefully users arent surprised if they change css variables and it takes effect everywhere except a few places.fixes fixes fyi will be addressed separately by after which its problematic selector will no longer exist
261436601,1363,https://api.github.com/repos/material-components/material-components-web/issues/1363,VinceMalone,1,0,0,0,0,0,the md spec mentions forms that have a majority of required fields do not need to be visually indicated with an asterisk in forms with some required fields indicate all of the required ones however if there are fewer optional fields indicate those instead mdc-textfieldcurrently if mdc-textfield__input is required the asterisk will always appear after the components label there is no way to keep the input as required and not have an asterisk in the label way to fix this is to allow a modifier class to omit the asterisk when required: css.mdc-textfield__input:not(.mdc-textfield__input--not-visually-required):required mdc-textfield__label::after or mdc-textfield__input:required mdc-textfield__label:not(.mdc-textfield__label--conceal-required)::after though its probably worth discussing what the best way to implement is
260049454,1348,https://api.github.com/repos/material-components/material-components-web/issues/1348,ju1ius,1,0,0,0,0,0,using a real element as backdrop instead of a pseudo-element allows click events on the drawer to bubble properly as a side-effect the component doesnt require css custom properties support anymore.closes closes
259833683,1345,https://api.github.com/repos/material-components/material-components-web/issues/1345,gpoitch,8,0,0,0,0,0,according to the readme by default an mdc button will inherit its color from the theme css:root mdc-theme-primary faf;} since this is no longer happening and the buttons are all black
259175395,1335,https://api.github.com/repos/material-components/material-components-web/issues/1335,aroms,1,0,0,0,0,1,bugautomatically inserted style attribute deforms mdc-select and doesnt allow reading mdc-select__selected-text mdc-select default label text what mdc-web version are you using what browser(s is this bug affecting chrome version official build bit firefox bit what os are you using ubuntu desktop macos high sierra what are the steps to reproduce the bug copy and paste the mdc-select sample with javascript from the demo page put a label how old are you longer than the available options impossible to read the label how old are you since the size of mdc-select fits the size of the options and the option is less long note i have a template example of the bug bug template on codepen what is the expected behavior do not automatically add any style attribute since without that attribute it works perfectly what is the actual behavior currently the problem is that a style attribute with an incorrectly calculated width is added to the div that has the js-select id see attached example in codepen if that style attribute is not added the label size works perfectly any other information you believe would be useful template example of the bug bug template on codepen
259115217,1334,https://api.github.com/repos/material-components/material-components-web/issues/1334,vandie,2,0,0,0,0,1,i needed an autocomplete for my own project so have started to build one following the material design spec found here and following the guidlines set out by this repository i filled in all needed documentation which can be found below but still need to write tests and finish the scss. component egineering outline of a test! test gif in codepen repository
258989536,1332,https://api.github.com/repos/material-components/material-components-web/issues/1332,jamesmfriedman,12,0,0,0,1,1,feature requestsi keep up to date with changes to this lib and have been loving using it i was looking at the the most recent changelog and found that mdc-button--primary and accent were removed in ecffebbbbeacc and now the suggestion for the breaking change is to use sass mixins to replicate the behavior.id would personally really love for sass to remain something that is optional for this library looking at the code that was removed for the buttons its not something that could be easily replicated without sass but primary and accent buttons are used frequently in any design ive ever worked on.in the end this will allow people with all different types of css processors or no processors to get the most out of the lib.cheers!james
258910328,1330,https://api.github.com/repos/material-components/material-components-web/issues/1330,amsheehan,1,0,0,0,0,0,the readme.md in the root of the repository targets for the developing mdc-web components link.this is a dead link
258762965,1328,https://api.github.com/repos/material-components/material-components-web/issues/1328,Spetnik,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting chrome version official build bit mozilla windows nt win x applewebkit khtml like gecko chrome safari what os are you using windows version os build what are the steps to reproduce the bug?use the dynamic view switching demo at examples of this issue can be seen at as well as other elements with ripple are also affected try on as well mouse down on an element that will ripple move the mouse away from the element mouse up what is the expected behavior the element clicked in step should no longer be highlighted what is the actual behavior the element retains the mdc-ripple-upgraded--background-active-fill mdc-ripple-upgraded--foreground-activation classes and remains highlighted
258421206,1324,https://api.github.com/repos/material-components/material-components-web/issues/1324,actra-gschuster,3,0,0,0,0,0,feature requestsas per the guidelines drawers may be positioned on the right side if present side nav bars can be pinned for permanent display or float temporarily as overlays side navs can be positioned on the left or right side of the screen the content appearing in the left nav is ideally navigation or identity-based right nav content should be secondary to the main content on a page
258398456,1323,https://api.github.com/repos/material-components/material-components-web/issues/1323,berets76,9,0,0,0,0,0,i need to post some data from the dialog and if server side validation fails i need to reload dialog content with errors.the problem is that each click on the dialog buttons anchor tags etc close it and i need to re-open generating an ugly flickering effect.i thought to intercept mdcdialog:accept event and cancel it preventing the dialog from closing but accept event is not cancelable.! image there a way to keep open the dialog on accept click
258317804,1322,https://api.github.com/repos/material-components/material-components-web/issues/1322,rhroyston,1,0,0,0,0,0,material design dialog guidelines do not address dialog width on tablet or desktop sized viewports i read somewhere that increments of px should be used but dont know if thats consensus or not.the html inputs i require on my dialog are simply too small for the default sized dialog it just looks unrefined and i dont want to stretch my input widths too far either to fill the dialog.any recommendations on some basic css to size the dialog maybe a sm md lg type of solution should i use increments of px or thanks in advance.! capture
257412741,1296,https://api.github.com/repos/material-components/material-components-web/issues/1296,Extarys,1,0,0,0,0,0,basic code also notice the same issue in the demo website where the right github icon isnt aligned properly and the drawer icon on the left have the same issue.they appear a little bit too high not centered.edit i copied the wrong issue damn
256913242,1281,https://api.github.com/repos/material-components/material-components-web/issues/1281,yeelan0319,1,0,0,0,0,0,related to codepen demo server dot-mdc-web-dev.xxxx.com
256843124,1277,https://api.github.com/repos/material-components/material-components-web/issues/1277,bradwilliford,0,0,0,1,0,0,this page explains how to use unpkg cdn and notes that an official cdn hosted version is in the works filing this issue to track.for security speed and reliability a google hosted library would be ideal
256833517,1275,https://api.github.com/repos/material-components/material-components-web/issues/1275,lynnjepsen,3,0,0,0,0,0,the users ability to dismiss a dialog may be disabled so that one of the actions must be chosen before proceedingsee for background
256046296,1258,https://api.github.com/repos/material-components/material-components-web/issues/1258,kfranqueiro,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome or safari on os x what are the steps to reproduce the bug go to scroll to the bottom and continue scrolling to cause the browser to rubber-band past the end of the screen what is the expected behavior?it shouldnt be possible to see the hidden snackbars what is the actual behavior?the boxes from the hidden snackbars are visible.! image any other information you believe would be useful?presumably were leaving these elements in a convenient resting position to transition in possible solutions switch to using animations and set up keyframes so that the resting place is further offscreen but it immediately moves to the current resting place at the beginning of the animation since this is a js component programmatically update the transition style or apply another class before becoming active after the transition ends after becoming inactive
255517870,1246,https://api.github.com/repos/material-components/material-components-web/issues/1246,nulldeba,2,0,0,0,0,1,sub-menu feature feature requests new components)>menu items with the children items.>menu with check list sub-menu
254504215,1227,https://api.github.com/repos/material-components/material-components-web/issues/1227,zomars,2,0,0,0,0,0,what mdc-web version are you using what os are you using macos sierra what are the steps to reproduce the bug please write the steps which need to be taken in order to reproduce the bug these steps should be as detailed as possible e.g using react-scripts build do yarn build what is the expected behavior no errors what is the actual behavior i get the following error yarn buildyarn build v react-scripts buildcreating an optimized production build...failed to compile.failed to minify the code from this file node_modules/@material/base/foundation.js:read more here command failed with exit code
253207780,1196,https://api.github.com/repos/material-components/material-components-web/issues/1196,eromoe,1,0,0,0,0,0,"problem descriptionmain.scss mdc-theme-primary cb;//$mdc-theme-accent ff;//$mdc-theme-background fff;@import material-components-web/material-components-web;@import color;.... error when add import material-components-web/material-components-web; error in node_modules/css-loader!./node_modules/resolve-url-loader!./node_modules/sass-loader/lib/loader.js?{sourcemap:true,includepaths: e://project//allproject_git//react-boilerplate//node_modules }!./app/styles/main.scssmodule build failed:undefined invalid style specified choose one of primary accent background text-primary-on-primary text-secondary-on-primary text-hint-on-primary text-disabled-on-primary text-icon-on-primary text-primary-on-accent text-secondary-on-accent text-hint-on-accent text-disabled-on-accent text-icon-on-accent text-primary-on-background text-secondary-on-background text-hint-on-background text-disabled-on-background text-icon-on-background text-primary-on-light text-secondary-on-light text-hint-on-light text-disabled-on-light text-icon-on-light text-primary-on-dark text-secondary-on-dark text-hint-on-dark text-disabled-on-dark text-icon-on-dark in e:\project\allproject_git\react-boilerplate\node_modules\@material\theme\_mixins.scss line column app/styles/main.scss app/containers/app/index.js app/app.js multi eventsource-polyfill webpack-hot-middleware/client?reload=true app/app.js"
252179245,1172,https://api.github.com/repos/material-components/material-components-web/issues/1172,SgtPooki,3,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting all what os are you using all what are the steps to reproduce the bug look at your source code note that you dont support any possibility for dividing the tablets cols by you dont support nor nor etc also check out and be sure to look at the tablet size what is the actual behavior its impossible to center three cells in tablet and phone view because your layout system isnt flexible enough to support this why even provide a grid system if youre not going to provide more than flexbox any other information you believe would be useful maybe im missing something but i feel like as a design framework you should provide guidance on layout as a minimum also you should remove the deprecated warning from mdl because mdc seems like its not even close to ready
251757441,1163,https://api.github.com/repos/material-components/material-components-web/issues/1163,touficbatache,4,0,0,0,0,0,bugs what mdc-web version are you using what browser(s is this bug affecting all browsers what os are you using all os what are the steps to reproduce the bug go to click on the button observe the components behavior what is the expected behavior the button should have a px border-radius what is the actual behavior the button should has a px border-radius any other information you believe would be useful according to the guidelines buttons should have a dp corner radius
251073603,1140,https://api.github.com/repos/material-components/material-components-web/issues/1140,lynnjepsen,2,0,0,0,0,0,x button x checkbox x drawer x fab x icon toggle x linear progress x radio x ripple x select x slider x switch x tabs x text field x toolbar
250831143,1138,https://api.github.com/repos/material-components/material-components-web/issues/1138,j-o-d-o,1,0,0,0,0,0,removing stoppropagation for the drawer and adding conditional closing similar to the dialog).fixing issues and was not sure what to do with drawerclickhandler i left it in there with an empty function.i tried to do it similar to the fix for the the dialog click events as the issues are similar
250612825,1134,https://api.github.com/repos/material-components/material-components-web/issues/1134,deap82,4,0,0,0,0,0,im still on version of the full material-components-web package.after returning from vacation i suddenly have an issue with building the sass in our build environment.the build environment runs the exact same scripts as on local dev using gulp.the sass is built with npm package gulp-sass.the issue seems to be related to an update made on july where a bunch of sass variables were renamed the build server runs the gulp script gulp-sass outputs the following error message: --t::.z error in plugin sass--t::.z message:--t::.z node_modules\@material\elevation\_variables.scss--t::.z error undefined variable mdc-animation-standard-curve-timing-function.--t::.z on line of node_modules/@material/elevation/_variables.scss--t::.z mdc-elevation-transition-timing-function mdc-animation-standard-curve-timing--t::.z it seems to me that the server when running npm install has downloaded a more current version of material/elevation/_variables.scss while material/animation/_variables.scss is still at the point of when im running locally using task runner explorer in vs everything works as expected and by inspecting my local node_modules folder i have verified that i indeed have the version of mentioned files ie before the variable rename commit this is even after running npm install locally several times.my dependency in package.json looks like this: material-components-web if anyone has any idea on what might go wrong on the build server it would be greatly appreciated has something gone wrong with the versioning of the elevation and/or animation package?i suppose a solution might be to upgrade at least to the first version released after july but as a lot has happened that is a task im not keen on rushing into without some planning
250477533,1127,https://api.github.com/repos/material-components/material-components-web/issues/1127,eromoe,1,0,0,0,0,0,for example:! image click at other place to make halo disappear:! image reproduce on(chrome it is by design would you please add a property for switch make halo disappeared after clicking
250059957,1124,https://api.github.com/repos/material-components/material-components-web/issues/1124,tinrab,5,0,0,0,0,0,clicking and holding a button then releasing or clicking away from it keeps the button in focused state.an example on behavior is different with css only buttons you have to click outside of buttons bounds to remove the background tint which also doesnt seem correct with material design lite it works as expected
249179300,1104,https://api.github.com/repos/material-components/material-components-web/issues/1104,kfranqueiro,2,0,0,0,0,0,i noticed we currently have packages drawer ripple toolbar that define util.applypassive for detecting passive event support and making use of it and at least packages dialog and ripple that define a function to detect support for custom css properties.this leads to redundant implementation and test code and in the latter case also has led to the two implementations skewing apart from each other.we should consider putting common utilities like this in a centralized reusable package we should also probably check whether there is a reason other than an oversight why supportscsscustomproperties in dialogs util hasnt kept up with the edge cases added to ripples util
248554980,1092,https://api.github.com/repos/material-components/material-components-web/issues/1092,Teoxoy,1,0,0,0,0,0,added new feature to mdctextfield moved here
248214797,1084,https://api.github.com/repos/material-components/material-components-web/issues/1084,dpraul,1,0,0,0,0,0,fixes
248214749,1083,https://api.github.com/repos/material-components/material-components-web/issues/1083,dpraul,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome what os are you using?windows what are the steps to reproduce the bug run demo server bud is also present on current live demo navigate to snackbar.html press show before the snackbar hides change one of the input parameters i.e change message text to hi click show again what is the expected behavior?the current snackbar displays until timeout or until the action is clicked when dismissesonaction is true then a new snackbar shows with the updated input what is the actual behavior?the current snackbar is modified with the new input parameters it hides and then a new snackbar appears with the identical updated information
247989347,1072,https://api.github.com/repos/material-components/material-components-web/issues/1072,evil-shrike,3,0,0,0,0,0,in all samples in docs and the catalog theres only a single row always: its not obvious how to add a next row if its supported at all:should i add a next mdc-layout-grid__inner under same mdc-layout-grid yes it woks div class=mdc-layout-grid div class=mdc-layout-grid__inner div class=mdc-layout-grid__cell> or only add another mdc-layout-grid :
246636813,1048,https://api.github.com/repos/material-components/material-components-web/issues/1048,wzup,0,1,0,0,0,0,why does it happen i do everything by you tutorial why error?you say here mdc-form-field is automatically rtl-awaresince the error is thrown its not true isnt it how to solve it? upd :! node_modules material_rtl in src/sass/globals.scss module build failed modulebuilderror module build failed undefined file to import not found or unreadable material/rtl/mixins parent style sheet c:/users/user/app/node_modules/@material/form-field/mdc-form-field.scss in c:\users\user\app\node_modules\@material\form-field\mdc-form-field.scss line column at runloaders c:\users\user\app\node_modules\webpack\lib\normalmodule.js at c:\users\user\app\node_modules\loader-runner\lib\loaderrunner.js at c:\users\user\app\node_modules\loader-runner\lib\loaderrunner.js at context.callback c:\users\user\app\node_modules\loader-runner\lib\loaderrunner.js at object.asyncsassjobqueue.push as callback c:\users\user\app\node_modules\sass-loader\lib\loader.js at object.
246435410,1040,https://api.github.com/repos/material-components/material-components-web/issues/1040,Falieson,1,0,0,0,0,0,if theres an example framework youd like to see or if youre a framework author who wants to provide an example please consider letting us know and well work with you to have it contributed!people are still using meteorjs and blaze/spacebars/handlebars id like an example of implementing mdc-web on an example meteor/blaze app.others would also benefit from the example
246207043,1035,https://api.github.com/repos/material-components/material-components-web/issues/1035,mether,8,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?mozilla macintosh intel mac os x applewebkit khtml like gecko chrome safari/.also affects firefox mozilla macintosh intel mac os x rv gecko firefox what os are you using?osx but tested it on a coworkers laptop running os what are the steps to reproduce the bug run the demo server or view the demo site go to localhost:/layout-grid.html or ensure that the desktop margin and desktop gutter are set to the defaults of px scroll to the grid nested within parent cell example resize the browser window to px width may vary per screen notice that the gutter between the first and second elements begin to shrink and eventually overlap before resizing to tablet px i also have a template on codepen which i made to test whether it had something to do with the amount of nested grids or the span size of the cells what is the expected behavior?i would expect it to continue resizing down gracefully instead of breaking out of the grid/alignment what is the actual behavior? mdc-layout-grid__cell are overflowing outside of their mdc-layout-grid__inner wrappers when the mdc-layout-grid__inner width is too small.! here is a gif of the behaviour any other information you believe would be useful? heres an additional example wireframe of the layout im trying to achieve how on resize the elements and overflow outside the gridhopefully this is enough info let me know if i missed anything!loving the library btw cheers
246136311,1032,https://api.github.com/repos/material-components/material-components-web/issues/1032,lynnjepsen,2,0,0,0,0,0,check out the latest code and run npm run dev navigate to the latest version of the demo page is not available on yet)the mdc-theme--dark section shows grey text in the dialog! yyyejwvngs the mdc-dialog--theme-dark section black text.! rkaddbqgpc second section mdc-dialog--theme-dark has the bug the dialog should have grey text.the fix is to correct the include mdc-theme-dark(.mdc-dialog true within the mdc-dialog__body context of mdc-dialog.scss it needs to be updated to @include mdc-theme-dark(.mdc-dialog) mdc-theme-dark mixin requires compound to be set to true if the current selector is a compound selector with the base selector...and mdc-dialog__body is not a compound selector with mdc-dialog
245891026,1025,https://api.github.com/repos/material-components/material-components-web/issues/1025,Teoxoy,1,0,0,0,0,0,at the end of the readme file for the select package there is an example of how you can switch between selects for better cross-device ux in the example the select element is being attached to an mdcselect obj that would not work because the initialize function tries to create a menu with a non existent root element.possible fixes update readme to show a working example or allow and implement select element as root for mdcselect
245670111,1018,https://api.github.com/repos/material-components/material-components-web/issues/1018,DBartsch,1,0,0,0,0,0,so im having a mdctextfield that is initialized automatically.i want to validate it by myself and this cant be done with any pattern or max-/minlength attribute.as far as i understood the documentation all thats to do is calling setcustomvalidity with any string as a parameter but after doing so the field isnt marked as invalid getting the validation properties of the htmlinputelement also doesnt show anything.am i missing something out or is something catching and reverting the invalid status?just giving the mdc-textfield the class mdc-textfield--invalid is also not working because the field may get and lose its focus afterwards again i tested it without any focus changes too
245628623,1017,https://api.github.com/repos/material-components/material-components-web/issues/1017,JordyvA,6,0,0,0,0,0,"hi all,ive a problem with the mdc-slider inside a mdc-dialog the slider is not positioning on the right spot because of the mdc-dialog i think the width of the complete slider with the track markers is right the only thing is that the thumb is not on the right markers the situation marker slider thumb on position first par of bar is colored on position bar is fully colored)when i resize the window a little the slider thumbs are correct on top of the markers is it possible that the slider keeps track of the parent as well so when the parent is resizing dialog the thumbs are replaced as well if i use a settimeout after showing the dialog and creating the slider inside that timeout its working well"
245488234,1009,https://api.github.com/repos/material-components/material-components-web/issues/1009,MrGrigri,1,0,0,0,0,0,style improvementi came across an inconsistency with the newly added text field boxes specifically with its helper text the helper text should have a left and right margin of pixels what mdc-web version are you using what browser(s is this bug affecting?all what os are you using?windows enterprise what are the steps to reproduce the bug?click in the text field box that is required and then blur the input by clicking outside the help text appears as an error and it is allgned to the left with no margins what is the expected behavior?it should follow the md guidelines for text field boxes found here what is the actual behavior?it is left alligned with no margins any other information you believe would be useful?creating a pull request
245158131,1004,https://api.github.com/repos/material-components/material-components-web/issues/1004,smandava,4,0,0,0,0,0,when mdc-web persistent drawer is used with react-router-dom browserrouter the links inside the drawer are losing spa behavior that is links the links html a inside the drawer are bypassing react-router and making a fresh request to the server what mdc-web version are you using what browser(s is this bug affecting?chromeversion official build bit what os are you using?macos sierra and windows what are the steps to reproduce the bug npm install g create-react-app git clone cd router-issue npm i npm start open on your browser open developer tools and network tab click on about link network tab shows about requests made to the server to render the page actual behaviour open app.js in a text editor replace browserrouter with hashrouter and save the file open on your browser open developer tools and network tab click on about link you see the no network requests but the link is still functional expected behaviour what is the expected behavior?described in above what is the actual behavior?described in above any other information you believe would be useful?none
244650836,993,https://api.github.com/repos/material-components/material-components-web/issues/993,Garbee,2,0,0,0,0,0,the toolbar icons currently only have the basic outline for focus/active state this doesnt mesh well with what the rest of md components provide i think it would be best as a starting point to handle the toolbar icons/actions as buttons for state so wed copy the same background color changes for active focus/hover disabled etc states this will improve the design to fit far better with the md spec and improve the usability and ay of the component for users.the current spec doesnt provide any guidance here which is why copying buttons as a baseline is my recommendation
244503911,983,https://api.github.com/repos/material-components/material-components-web/issues/983,lynnjepsen,1,0,0,0,0,4,our framework examples currently serve as example code for how to wrap mdc web in various frameworks angular aurelia preact react vuethis has some benefits we keep real code to test our foundation/adapter architecture against lets us document some examples of how foundation/adapter works with frameworksbut it also has one key problem we often have to triage issues in the community that are specific to one of these frameworks we do not have experts for each of these frameworks who can help resolve these issues so we often have unsatisfying replies to these issues.@amsheehan suggested that we start a list on our readme with links to other repositories which wrap mdc web in a framework for example prateekbh could submit a pr to the mdc web readme which adds a link to his preact material components then mdc web could direct all preact specific issues to that repository.and of course prateekbh can still send mdc web prs whenever our foundation/adapter code needs tweaking to better support preact.i really like this suggestion but wanted to open it up as a discussion in case there was other feedback
244499886,982,https://api.github.com/repos/material-components/material-components-web/issues/982,lynnjepsen,1,0,0,0,0,0,our public github docs sometimes make it difficult for external developers to find what do they need it can be difficult to distinguish between documentation for an api of a specific component our general code architecture and best practices our code review process our triage process our release processmost people reading our github docs are web developers who depend on at least one of our node modules and want the documentation for the api of that component they also want a place to file bugs as they find them.but there is also a smaller segment of people reading our github docs who are interested in contributing code back to our repo we want to make sure we share architecture best practices and the code review process with them so they can help us make improvements.im filing this issue so we can start a discussion about the best way to structure out github docs and create a plan for migrating from our existing structure to the new future
244022046,977,https://api.github.com/repos/material-components/material-components-web/issues/977,JosefJezek,1,0,0,0,0,0,touch targets should be at least x dp
242564375,937,https://api.github.com/repos/material-components/material-components-web/issues/937,f2ex,2,0,1,1,0,1,visited the material.io today but there was a error the website address changed
242003148,929,https://api.github.com/repos/material-components/material-components-web/issues/929,isidrok,9,0,0,0,0,0,"bug main inside package.json is referencing to es modules what mdc-web version are you using?this happens with all components which have different versions for instance the textfield is in version what are the steps to reproduce the bug create a project with npm init install the textfield component npm i save material/textfield configure rollup or webpack to bundle the project and set babel to exclude node_modules somewhere in your project use the textfield: javascriptimport as textfield from material/textfield;mdccomponent new textfield.mdctextfield(element check that the bundled app has the textfield component written in es go to node_modules/@material/textfield change main from index.js to dist/mdc.textfield.min.js create the bundle again note that this time it will not find the module change main back to index.js stop excluding node_modules in the babel configuration should work fine this time what is the expected behavior?the main property inside the package.json should reference to the transpiled and bundled module instead of the es version so developers dont have to transpile it in order to avoid incompatibilities.for example the textfield component should be pointing to dist/mdc.textfield.min.js instead of index.js.theres actually another problem because the dist versions are exporting the utilities differently the following snippet should work equally in the original and the minified/transpiled version: javascriptimport as textfield from material/textfield;mdccomponent new textfield.mdctextfield(element) but using the later i get the following error:_mdctextfield is not exported by node_modules\@material\textfield\dist\mdc.textfield.min.js what is the actual behavior?the main is pointing to index.js which contains the es module and if i dont transpile it some things wont work for example i cannot use uglify._(uglify plugin error transforming bundle with uglify plugin unexpected token name mdcfoundation)_thats because it finds mdcfoundation defined as a class any other information you believe would be useful?there is a proposal to specify two entry points or main references inside package.json: json...main dist/app.min.js,jsnext:main index.js,... for more information refer to this issue"
241782652,924,https://api.github.com/repos/material-components/material-components-web/issues/924,touficbatache,3,0,0,0,0,0,feature requests i opened this issue based on the request of amsheehan on discord.i wanted to ask whats the best way to reset mdc input fields after i typed into them for example i typed something and submitted that thing i want that later the mdc textfield to be reset and not have any text in it i tried changing its value to none and after that i blur the field but it doesnt work the label doesnt return to where it was but it keeps floating without any text update i solved my problem by removing the mdc-textfield__label--float-above class from the label so it returns to where it was document.queryselector(.labels class).classlist.remove(mdc-textfield__label--float-above update another thing occurred when mdc textfield had a required attribute and turned red the red input color didnt go away so i did that document.queryselector(.mdc-textfield).classlist.remove(mdc-textfield--invalid); maybe this could be good to add to the component adding a function that fully resets mdc-textfield
240507885,902,https://api.github.com/repos/material-components/material-components-web/issues/902,ZhugeSong,1,0,0,0,0,0,after experimenting for a while using mdc-web ive become confused regarding how themes are actually supposed to work having read the examples provided on i tried to set up theme colors and a few components see my codepen example values for the primary i picked near black and accent i picked a red theme colors works like i would expect but the theme background color i picked near black didnt seem to be used for anything my first thought was that i simply wasnt using it correctly that the pages background color is still meant to be light just certain components would use the theme background color for their background.however im confused around the behavior of the card component ive set all the proper theme text colors white for everything except on a light background which i set to black this i thought was appropriate because i would want white text on the primary color black accent color red background color black and other dark backgrounds and white text on other light backgrounds.the card component seems to be using the text color to go with the theme background but it doesnt actually use the theme background so the text is unreadable is this intentional or am i required to specify that the card uses the theme background for it to work correctly by default?i went back and looked over the theme documentation to see if the dark theme option was needed for some reason however that seems to just worsen the problem as then the buttons are then set to expect a dark theme background that while specified in the css isnt actually used by those components so i was confused by the point of the dark theme class if it only seems change the text color used by components that you have to set a background for manually anyway and in that case why would you not specify the custom text color class at the same time?my expectation was that either the card or any other component would either set both a background and text color such as theme background and text on theme background or none at all if it sets only one as i am observing such as text on theme background but leaving background color unchanged then this seems like it can easily cause default components to break when the theme is set to certain colors.i suspect i might be missing something fundamental about how the theme colors are supposed to be used e.g the variable for text on background doesnt mean theme background but the default background of the page but if not id like to try to narrow the focus to what part of my usage is actually breaking what mdc-web version are you using?version latest at this moment what browser(s is this bug affecting?observed in chrome bit firefox bit what os are you using?windows bit
240304451,899,https://api.github.com/repos/material-components/material-components-web/issues/899,h-ikeda,6,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome what os are you using?windows professional sp what are the steps to reproduce the bug?please see resize window width from under px to over px what is the expected behavior?top of the main content sholud be adjusted to bottom of the toolbar what is the actual behavior?when toolbar width is between px and px top of the main content is hidden by toolbar.margin of the main content may be not enough i guess any other information you believe would be useful
240143497,896,https://api.github.com/repos/material-components/material-components-web/issues/896,xxRockOnxx,1,0,0,0,0,0,what mdc-web version are you using? material-components-web what browser(s is this bug affecting?only tested chrome and firefox on gnome what os are you using?ubuntu gnome what are the steps to reproduce the bug mdcselect.attachto(element done what is the expected behavior? mdc-select width should be correct what is the actual behavior?returns short values any other information you believe would be useful?when not yet attaching an instance the element looks good once initialized the selected text cannot be seen
239972546,890,https://api.github.com/repos/material-components/material-components-web/issues/890,cdiener,1,0,0,0,0,0,what mdc-web version are you using?mdc-toolbar what browser(s is this bug affecting?chrome probably all what os are you using?linux what are the steps to reproduce the bug?go to the following example on codepen which is your own demo at full width use a desktop window with a width px scroll down to trigger the flexible behavior until the toolbar is minimized expansion ratio what is the expected behavior?upon scrolling down the title and menu icon should be aligned in the minimized toolbar what is the actual behavior?title and menu icon are misaligned any other information you believe would be useful?current alignment in the flexible waterfall toolbar actually only works on small screens due to fixed height of px desktop uses px which seems to break the alignment
239946830,889,https://api.github.com/repos/material-components/material-components-web/issues/889,Shyam-Chen,1,0,0,0,0,0,bugs what mdc-web version are you using?v what browser(s is this bug affecting?all browsers what os are you using?windows what are the steps to reproduce the bug what is the expected behavior?! default what is the actual behavior any other information you believe would be useful?:x
239827224,883,https://api.github.com/repos/material-components/material-components-web/issues/883,joshunger,2,0,0,0,0,0,would it be possible to add the missing typography color contrast text colors outlined on for example caption is body is etc.i couldnt find documentation that these exist on like color contrast in mdl was implemented in using opacity
239319737,877,https://api.github.com/repos/material-components/material-components-web/issues/877,ZanderBrown,3,0,0,0,0,0,opening an issue here per garbees suggestion.it would be great if mcw had a search component similar to if not based on ekoopmans proposed component for mdl original pr message description this is an mdl search component based off of this material.io spec it features an input field dropdown search suggestions and responsive back/cancel buttons search functionality is exposed by two callback functions search and submit which are specified as text attributes on the component.the component is loosely based off of the menu and textfield components which allowed me to maintain some style consistency with those it can be styled as an inset box i.e persistent search in the material.io spec a full-header search field an expandable search field i.e expandable search or an unstyled inline block it also works in combination with mdl-textfield styling which is demoed in the snippets.all documentation and testing is done though i could use help with further cross-browser testing basically sums up what we are looking for here.for a visual guide with have ekoopmans original demo and documentation ekoopmans eklem have expressed an interest to work on implementing this
237988248,853,https://api.github.com/repos/material-components/material-components-web/issues/853,lynnjepsen,1,0,0,0,0,0,resolves raised buttons on dark theme should default to theprimary color which means their text should be text-primary-on-primary
237597945,845,https://api.github.com/repos/material-components/material-components-web/issues/845,robzenn92,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting? only firefox i have version works fine in safari and chrome what os are you using?macos what are the steps to reproduce the bug?go to or visit what is the expected behavior?all the material icons within the toolbar should be vertically centered in all the browsers.e.g in chrome this is fine see:
237007213,840,https://api.github.com/repos/material-components/material-components-web/issues/840,traviskaufman,12,0,0,1,0,0,background problemmdc-web was designed from the ground up to integrate with frameworks our initial solution to the problem of widely varying environments and host framework apis virtual dom shadow dom incremental dom no dom etc was our component foundation adapter architecture model (../blob/master/docs/architecture.md since weve released mdc-web weve built components using this model furthermore weve been able to prove out its use case both by building our own framework examples and through our external communitys use of the model.that being said weve also been able to see a few problems with the approach such as the following duplication of logic across components almost all adapter interfaces require the user to implement addclass removeclass etc hard to understand large learning curve many contributors seem to be confused frustrated by writing adapters and instead opt to just wrap our vanilla components o(n effort every component needs to have its adapter implemented separately n adapters for n components lots of breaking changes every time an adapter interface is modified its a breaking change documentation overhead every adapter api needs to be documented in a readme this leads to developers wanting to implement material components for their framework needing to peruse multiple files scattered across multiple locations this is made even worse if by error we forget to document a specific adapter method solution a universal adapter interfacethe main idea here is to build one single adapter per platform/framework instead of per component .we had talked about this idea during the initial design phase of mdc-web but punted on it because we didnt want to try and build an overarching adapter without knowing exactly what it would need thus have it be subject to a lot of churn i feel like weve built enough into the library now that we would have a good idea of what it would need to facilitate.for example for our vanilla components there would be one mdcvanilladomadapter or some other better name that would implement every method required for every foundation to interact with its host environment as such it would expect components to be structured in a certain way and share a common interface and way of doing things for example it might expect that all components expose a property root that allows access to the underlying dom element the component is wrapping this adapter could then be used by all foundation code thus components simply become idiomatic wrappers for foundations and do not have to implement any of the adapter logic themselves.using a single universal adapter presents much less of a learning curve rather than have to think about how to build an adapter every time a developer wants to build integrate a component she instead would only have to learn how to use one single adapter across multiple components while there would still be a learning curve wrt foundations components not having to figure out how to write or implement an adapter would save the developer a lot of time furthermore frameworks like angular have similar mechanisms for dealing with heterogeneous platforms see platform packages single adapter also means that documentation on how to build and design ones own adapters would be centralized rather than spread out across the codebase this means that if framework authors wanted to build an adapter for their framework they could find the entire specification for what would be needed in one location.finally this means that we could theoretically take on the task of building adapters for frameworks other than the vanilla dom react would be a great place to start with this there are currently dependent react wrapper packages for mdc-web on npm each with varying degrees of support and fidelity by building an official adapter we could remove an extremely large barrier when building material design components for these frameworks open-ended questions what goes in the interface what doesnt?need to audit common operations and figure out how to apply them across elements a big question here is how to target arbitrary dom elements that need to be queried modified one approach here could be to use unique strings or symbols as abstract identifiers for component elements: js mdc-textfield/foundation.jsexport const root symbol(mdc-textfield);export const label_element symbol(mdc-textfield__label somewhere in the code...this.adapter_.addclass(root cssclasses.focused);this.adapter_.addclass(label_element cssclasses.label_float_above); these identifiers could then be mapped to elements in component code how do we handle heirarchal component relationships?components like mdctabbar and mdcselect have adapter methods that operate on subcomponents rather than elements e.g getoffsetleftfortabatindex wed have to figure out a way to facilitate these relationships using a universal adapter how do we ensure adapters do not become extremely overcomplicated?having one gigantic overly-complex adapter api is just as bad as having s of smaller less-complex adapter apis imo wed have to put a lot of thought into designing an adapter interface thats resilient enough to facilitate the majority of future use cases that new components will require we dont want more breaking changes because due to continuously updating one single adapter
236969001,839,https://api.github.com/repos/material-components/material-components-web/issues/839,traviskaufman,3,0,0,0,0,0,a lot of our core component sass uses the mdc-rtl and mdc-theme-dark mixes in order to support rtl and dark mode respectively the tradeoff in using these mixins is that they increase the size of the final output if applications do not need to support rtl and/or dark themes then this leads to an unnecessary increase in code bloat.for users that are keen on optimizing their final code size i propose we do something like the following: scss globally$mdc-rtl-enabled true default within the mixin@mixin mdc-rtl if mdc-rtl-enabled mdc-rtl logic dummy example can do the same thing for dark themes this would give users an ability to further fine tune the code size footprint of our library
236256114,833,https://api.github.com/repos/material-components/material-components-web/issues/833,unascribed,1,0,0,0,0,0,see this runs contrary to the guidelines but considering mdc gives full control of button color through class names and css is very flexible its likely a non-issue this also fixes the text color being wrong when a light primary color is used. fair warning i tested this by deleting the directive with chrome devtools im sure my change here has the desired effect but i havent yet had a chance to test a fresh compile
235819457,822,https://api.github.com/repos/material-components/material-components-web/issues/822,jesperkristensen,4,0,0,0,0,0,what mdc-web version are you using?not sure neither material-components-web.min.js nor material-components-web.css seem to contain a version number but the issue looks to be the same on the master branch of this repository what browser(s is this bug affecting?tested on firefox and chrome what os are you using?windows what are the steps to reproduce the bug?i am using mdc-web together with angular v following this guide specifically this link from the guide have a mdc textfield as described in the guide above.when the value of the text field is updated from javascript via angular the position of the label does not change to reflect if the text field is empty or not open type something in the second text box the one that is not mdc styled observe that the mdc styled input is updated but the label and the value overlap each other.when i look at it seems to set label_float_above when the component is loaded and when focus is lost.but there does not seem to be a way to tell it that the value has been changed from javascript which should update label_float_above what is the expected behavior?there should be some api or other way for the framework to tell the component that the text field value has changed and it should update its label position to match the updated value what is the actual behavior?the field value and the field label are written on top of each other making them unreadable any other information you believe would be useful
234839336,809,https://api.github.com/repos/material-components/material-components-web/issues/809,touficbatache,2,0,0,0,0,0,bug what mdc-web version are you using what browser(s is this bug affecting all mobile browsers what os are you using any mobile os what are the steps to reproduce the bug go to ripple demo page and scroll down to bounded unbounded or go to the buttons demo page any element that has ripple click on the component button or list item observe the components behavior what is the expected behavior the ripple should fire then go away and blur after focus what is the actual behavior the ripple actually fires but the element doesnt blur after focus so there is a grey background on it this happens only the first time any other information you believe would be useful maybe we could add a blur to the element after its focused edit this actually could be fixed by removing the mdc-ripple-upgraded--background-focused class from the element after the ripple animation finishes traviskaufman
233654466,789,https://api.github.com/repos/material-components/material-components-web/issues/789,touficbatache,1,0,0,0,0,0,fixes amsheehan
233362226,783,https://api.github.com/repos/material-components/material-components-web/issues/783,touficbatache,1,0,0,0,0,0,"hey,i was making a template for my web app when i saw that the mdc simple menu does not look like the menu from the material design guidelines page on the left we have mdc and on the right we have material design guideliness menu.! mdc actually different in the font-size which should be px the font-weight which should be the min-width which should be px the letter-spacing which should be px should it be more or less than px robzenn)and with all these changes the menu will look exactly like the one on material design guidelines page on the left we have mdc and on the right we have material design guideliness menu.! mdc"
231759792,740,https://api.github.com/repos/material-components/material-components-web/issues/740,Whiteseeker,1,0,0,0,0,0,documentation requestit would be great in the doc to have a list of component that require javascript and a list of component that doesnt require javascript and maybe a list for when javascript is optional.im developing a website javascript-less here and im unsure what i can/cant use from mdc web.ps i know i have google analytics in the website but apart from that i try not to use javascript to reduce loading time
231621684,728,https://api.github.com/repos/material-components/material-components-web/issues/728,skleeschulte,1,0,0,0,0,0,i see that the ripple component has a createadapter method which returns the default adapter implementation in the react framework example it is used as a base adapter and only some of the adapter methods are changed for the react integration i think it would be helpful to have some way to get the default adapter of every component in my case for example if it was possible to get the default toolbar adapter i would not have to re-implement the adapter methods registerscrollhandler deregisterscrollhandler registerresizehandler deregisterresizehandler getviewportwidth and getviewportscrolly
231304294,719,https://api.github.com/repos/material-components/material-components-web/issues/719,bmihelac,5,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?chrome firefox probably all others as well what are the steps to reproduce the bug?add select component to dialog and open it we also have a template on codepen which we encourage you to use to create a reproduction of the issue the less time it takes for us to repro the issue the less time it takes to verify and fix it what is the expected behavior?open choices in proper position what is the actual behavior?wrong position shifted options as on picture below:! mdc-select-dialog
230917969,708,https://api.github.com/repos/material-components/material-components-web/issues/708,WordlessEcho,1,0,0,0,0,0,in material design guidelines menus should have top padding dp bottom padding dp! components_menus_specs.png material design components web menu only have bottom padding have no top padding:! simple menu material components catalog anyway seems that menus dividing line should have px padding guidelines is not clear about that.! components_menus_specs.png
230324516,695,https://api.github.com/repos/material-components/material-components-web/issues/695,bmihelac,1,0,0,0,0,0,what mdc-web version are you using please be specific e.g major.minor.patch_v what browser(s is this bug affecting?chrome firefox tested probably all please include the browser version a user-agent string is also quite helpful.version official build canary bit what os are you using?osx please include the os version...x what are the steps to reproduce the bug?using individual stylesheets and including stylesheet for select component before including stylesheet for menu component please write the steps which need to be taken in order to reproduce the bug these steps should be as detailed as possible e.g.>demonstration of change that would trigger incorrect styles we also have a template on codepen which we encourage you to use to create a reproduction of the issue the less time it takes for us to repro the issue the less time it takes to verify and fix it what is the expected behavior?styles of mdc-select__menu to overide mdc-simple-menu ie width overflow-y ! css-menu-before-select please describe what the component/code should be doing that its not. mdc-select what is the actual behavior?select does not looks equal anymore.! css-select-before-menu any other information you believe would be useful?including menu component stylesheet before select stylesheet yields correct styles
229784524,677,https://api.github.com/repos/material-components/material-components-web/issues/677,traviskaufman,1,0,0,0,0,0,figure out what happens to prefixes during un-filled idle state figure out whether or not to make prefixes suffixes rtl-aware
229597916,669,https://api.github.com/repos/material-components/material-components-web/issues/669,Shyam-Chen,1,0,0,0,0,0,jsimport mdcripple from material/ripple; .foreach.call document.queryselectorall(.mdc-button surface mdcripple.attachto(surface)); basherror transforming bundle with uglify plugin syntaxerror unexpected token name mdcfoundation line col pos
229511168,663,https://api.github.com/repos/material-components/material-components-web/issues/663,djensen47,3,0,0,0,0,0,when using/testing mdc-web on the demo site there seems to be an issue with the js button what mdc-web version are you using via this page what browser(s is this bug affecting?microsoft edge what os are you using?windows build what are the steps to reproduce the bug?open edge to and click on a button that is not css only what is the expected behavior?it behaves normally or degrades gracefully to a css only button which appears to be what happens on ie what is the actual behavior?! js-button-edge
229390021,661,https://api.github.com/repos/material-components/material-components-web/issues/661,robzenn92,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?i tried with safari and firefox but i think it does happen in all of them what os are you using?macos sierra what are the steps to reproduce the bug?open or visit the demo page what is the expected behavior?as described in the material design guidelines dialogs should have dp padding between side-by-side buttons.
228943997,654,https://api.github.com/repos/material-components/material-components-web/issues/654,deap82,2,0,0,0,0,0,follow the template below to ensure the quickest and most accurate response to your issue what mdc-web version are you using?current what browser(s is this bug affecting?probably all what os are you using?windows what are the steps to reproduce the bug?use the demo page dragging on one of the ripple surfaces the surface stays colored after releasing mouse/finger.the issue is especially notable on touch screen as dragging the page also is how you scroll if you start scroll on a ripple surface it stays colored what is the expected behavior?drag event does not start ripple or ripple effect fades out on mouse/finger release so that element is returned to initial state what is the actual behavior?ripple surface stays colored on drag event after mouse/finger release
228613625,646,https://api.github.com/repos/material-components/material-components-web/issues/646,jonboj,2,0,0,0,0,0,bug what mdc-web version are you using what browser(s is this bug affecting?chrome version bit firefox bit android chrome what os are you using?linux bit android should be similar on mac and windows what are the steps to reproduce the bug?open the temporary drawer the drawer e.g with esc what is the expected behavior?a close animation of around ms duration what is the actual behavior?a very fast close animation almost instant havent measured but e.g the gmail app on android has a much smoother and gentle close animation
228524644,644,https://api.github.com/repos/material-components/material-components-web/issues/644,j-o-d-o,1,0,0,0,0,0,i am using mdc with react.js and have an issue with the mdc drawer i striped down the react component to the basics: import react from react;import navlink link from react-router-domimport as mdc from material-components-web/dist/material-components-web;class header extends react.component constructor(props super(props this.test this.test.bind(this this.open this.open.bind(this componentdidmount this.drawer new mdc.drawer.mdctemporarydrawer(this.refs.drawer test console.log(test worked open this.drawer.open true render return header id=header classname=mdc-toolbar div classname=mdc-toolbar__row section classname=mdc-toolbar__section mdc-toolbar__section--align-start button onclick this.open()}>opentestdashboard linkhome linkdashboard linkhome linktest .edit the issue occurs with persistent temporary drawer the permanent drawer does not have these issues mdc-web versionmaterial-components-web material browser(s chrome version bit))firefox bit oswin
228313290,642,https://api.github.com/repos/material-components/material-components-web/issues/642,amsheehan,4,0,0,0,0,0,now that mdc tabs has landed implement a spec aligned scroller component this includes actionable buttons to scroll the tabs horizontally rtl compatibility accessible through keyboard interactions
227959557,627,https://api.github.com/repos/material-components/material-components-web/issues/627,kiransp,1,0,0,0,0,1,"dear team,i just added more data into the p tag of your demo link and it worked perfect in firefox but in ie this edit made the left drawer to shrink to very small size not even visible i have attached the screen shot for your reference please help me on this.! mdcdrawerissue"
226784075,590,https://api.github.com/repos/material-components/material-components-web/issues/590,whodidthis,2,0,0,0,0,0,"hi,i was wondering if you have any opinion on using drawers dynamically i would like to use temporary for mobile persistent for tablet and permanent for desktop.however a single drawer types class seems to be used throughout the contents of the drawer for example in a persistent drawer as seen here i can count mdc-persistent-drawer__drawer mdc-persistent-drawer__toolbar-spacer and mdc-persistent-drawer--selected all used in different child components of the parent mdc-persistent-drawer doesnt this make switching from one drawer type to another really difficult maybe you have some tips on how to solve a problem like this"
226132870,582,https://api.github.com/repos/material-components/material-components-web/issues/582,mhuebert,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?all browsers afaik i am using chrome version bit what os are you using?mac os what are the steps to reproduce the bug?view the select component on the demo either css-only or js-upgraded what is the expected behavior actual behavior?the focused state is communicated using a shaded background without padding inside the edges of the background:
225917491,579,https://api.github.com/repos/material-components/material-components-web/issues/579,neclepsio,2,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting?i use chrome but it maybe affects others what os are you using?windows what are the steps to reproduce the bug?have a menu inside a temporary drawer what is the expected behavior?when the menu is open and click outside the menu but in the drawer the menu should close what is the actual behavior?the menu stays open any other information you believe would be useful?i think the problem may be that both drawer and menu use document click listener to close
225686503,576,https://api.github.com/repos/material-components/material-components-web/issues/576,deap82,1,0,0,0,1,0,do you plan to refactor out variables to a separate variables.scss for each package?id like to reference some of the variables in the drawer and toolbar packages but as they reside in scss files that also outputs css i get that css twice in my bundle.when needing to reference variables from the grid-layout package i dont run in to this problem as that package has a separate variables.scss i can import
224811575,566,https://api.github.com/repos/material-components/material-components-web/issues/566,Brahmasmi,2,0,0,0,0,0,the current typography component supports the roboto font only if i am not wrong roboto does not support all non latin fonts.please consider adding support for non latin fonts as well.this issue is open on and is discussed further in material design spec
223693982,548,https://api.github.com/repos/material-components/material-components-web/issues/548,prateekbh,1,0,0,0,0,0,bugsfollow the template below to ensure the quickest and most accurate response to your issue what mdc-web version are you using or whatever demos are using what browser(s is this bug affecting chrome what os are you using mac/android what are the steps to reproduce the bug on a phone navigate to open the temporary drawer now swipe this drawer to close look at the main screen looks like an overlay has remained on the entire document what is the expected behavior?overlay must be fully invisible please describe what the component/code should be doing that its not what is the actual behavior?remaining overlay is having an alpha
222261651,525,https://api.github.com/repos/material-components/material-components-web/issues/525,BerndWessels,2,0,0,0,0,0,bugs what mdc-web version are you using what browser(s is this bug affecting?ie edge what os are you using?windows what are the steps to reproduce the bug?run any of the demos on ie and edge what is the expected behavior?ripple effect to work exactly like on chrome and firefox what is the actual behavior?ripple effect is not working at all
220970085,505,https://api.github.com/repos/material-components/material-components-web/issues/505,Garbee,1,0,0,0,0,0,what mdc-web version are you using from unpkg distribution what browser(s is this bug affecting?all supported browsers what os are you using?leenux what are the steps to reproduce the bug?use mdc-list-item styling on a button element primary use-case is within a drawer for a logout form. htmllog out
220962691,504,https://api.github.com/repos/material-components/material-components-web/issues/504,tranrate,1,0,0,0,0,0,refactor scss to include animating class modify foundation to use animating class and transitionend event for opening and closing dialog alter open close and destroy methods appropriately move style=visibility:hidden attribute into scss so that it is not required in html.closes breaking change dialogs do not require a style=visibility:hidden attribute in html registertransitionendhandler deregistertransitionendhandler and isdialog methods must be implemented by the adapter
220675667,496,https://api.github.com/repos/material-components/material-components-web/issues/496,deap82,5,0,0,0,0,0,hi!for some more advanced layout cases im having some serious problems using the mdc-layout-grid.first of all nesting doesnt work the same way as for example with bootstrap grid due to the very imposed px gutter.see example and my work-around in codepen as of chrome supporting css grids i ran into problems with some overrides i have to control top/bottom spacing separately on cells.see example and my suggestion in codepen are your thoughts on this is this outside the scope of mdc would my best bet be to use a grid system from some other css framework
219556535,475,https://api.github.com/repos/material-components/material-components-web/issues/475,trimox,0,0,0,0,0,1,add framework integration example for angular example angular components for mdc textfield and button example page demonstrating textfield and button bindings and events.pr you have any suggestions please let me know
219121541,469,https://api.github.com/repos/material-components/material-components-web/issues/469,BerndWessels,1,0,0,0,0,0,what mdc-web version are you using what is the expected behavior?rendering material-components-web components on the server-side node.js should work what is the actual behavior?rendering on the server node.js results in the following error: referenceerror htmlelement is not defined any other information you believe would be useful?tested with this example tested with a preact version of the same example: js import dependencies import h component from preact;import classnames from classnames/dedupe;import getcorrecteventname from material/animation/dist/mdc.animation;import mdcripple mdcripplefoundation from material/ripple/dist/mdc.ripple;import mdccheckboxfoundation from material/checkbox/dist/mdc.checkbox;import r from ramda import local dependencies import styles import styles from styles;import material/checkbox/mdc-checkbox.scss;import material/ripple/mdc-ripple.scss create the component static proptypes id proptypes.string labelid proptypes.string checked proptypes.bool disabled proptypes.bool indeterminate proptypes.bool onchange proptypes.func static defaultprops checked false disabled false indeterminate false onchange function getmatchesproperty(htmlelementprototype return webkitmatchesselector msmatchesselector matches filter((p p in htmlelementprototype).pop const anim_end_event_name mdccheckboxfoundation.strings const matches getmatchesproperty(htmlelement.prototype);const matches true;export default class checkbox extends component initialize local component state constructor(props super(props this.refs this.state classes ripplecss checkedinternal this.props.checked false disabledinternal this.props.disabled false indeterminateinternal this.props.indeterminate false here we initialize a foundation class passing it an adapter which tells it how to work with the react component in an idiomatic way foundation new mdccheckboxfoundation addclass classname this.setstate(prevstate classes r.append(classname prevstate.classes removeclass classname this.setstate(prevstate classes r.without(classname prevstate.classes registeranimationendhandler handler if this.refs.root this.refs.root.addeventlistener(getcorrecteventname(window animationend handler deregisteranimationendhandler handler if this.refs.root this.refs.root.removeeventlistener(getcorrecteventname(window animationend handler registerchangehandler handler note that this could also be handled outside of using the native dom api for example onchange within render could delegate to a function which calls the handler passed here as well as performs the other business logic the point being our foundations are designed to be adaptable enough to fit the needs of the host platform if this.refs.nativecb this.refs.nativecb.addeventlistener(change handler deregisterchangehandler handler if this.refs.nativecb this.refs.nativecb.removeeventlistener(change handler getnativecontrol if this.refs.nativecb throw new error(invalid state for operation return this.refs.nativecb forcelayout if this.refs.nativecb this.refs.nativecb.offsetwidth isattachedtodom boolean(this.refs.nativecb for browser compatibility we extend the default adapter which checks for css variable support ripplefoundation new mdcripplefoundation(object.assign(mdcripple.createadapter(this isunbounded true issurfaceactive this.refs.nativecb matches (:active addclass classname this.setstate(prevstate classes r.append(classname prevstate.classes removeclass classname this.setstate(prevstate classes r.without(classname prevstate.classes registerinteractionhandler evttype handler this.refs.nativecb.addeventlistener(evttype handler deregisterinteractionhandler evttype handler this.refs.nativecb.removeeventlistener(evttype handler updatecssvariable varname value this.setstate(prevstate ripplecss r.assoc(varname value prevstate.ripplecss computeboundingrect const left top this.refs.root.getboundingclientrect const dim return top left right left dim bottom top dim width dim height dim render within render we generate the html needed to render a proper mdc-web checkbox return div classname={ mdc-checkbox this.state.classes.join ref={e this.refs.root e input id={this.props.id type=checkbox classname=mdc-checkbox__native-control aria-labelledby={this.props.labelid checked={this.state.checkedinternal disabled={this.state.disabledinternal onchange={evt this.setstate checkedinternal this.refs.nativecb.checked indeterminateinternal false this.props.onchange(evt ref={e this.refs.nativecb e div classname=mdc-checkbox__background svg classname=mdc-checkbox__checkmark viewbox path classname=mdc-checkbox__checkmark__path fill=none stroke=white d=m svg div classname=mdc-checkbox__mixedmark>
219065238,467,https://api.github.com/repos/material-components/material-components-web/issues/467,lynnjepsen,0,0,0,1,0,0,s when there are no tilesresolves updates the grid-lists foundation to not center tiles when there are no tiles also updates grid-lists index.js to check if a tile exists before calling offsetwidth on it
216531451,430,https://api.github.com/repos/material-components/material-components-web/issues/430,jscissr,1,0,0,0,0,0,optimized using xmlns attribute can be removed for inline svg see
215498729,411,https://api.github.com/repos/material-components/material-components-web/issues/411,yeelan0319,1,0,0,0,0,0,bugs what mdc-web version are you using what browser(s is this bug affecting safari version what os are you using macos d what are the steps to reproduce the bug run the demo server go to localhost:/dialog.html click show dialog button on the left what is the expected behavior dialog should appears in the center of the screen what is the actual behavior dialog left rim appears in the center of the screen and hope dialog is off screen any other information you believe would be useful?it seems like mdc-dialog__surface is using position absolute to position itself correctly on vertical direction however this seems making safari cannot correctly measure its metrics and think it occupy zero width within flexbox the fix could be changing the style to position relative;bottom it should exactly move the dialog to the same position
215408748,407,https://api.github.com/repos/material-components/material-components-web/issues/407,davidharting,0,0,0,0,0,5,notes*this is not a feature request or a bug so if there is a better way to communicate this please let me know and i will close this pr. *my main purpose in opening up this issue is to get feedback on this approach for integrating material-components-web with react does this simple approach miss anything important integration approachi am attempting to use material-components-web with react for a production web app i found a way of integrating with react that is much more lightweight than the foundation adapter pattern.the basic idea is create and destroy vanilla material-component-web js components based on the react lifecycle i hook up the material component to the right element of the dom by using the react api to get a refence to a dom element example javascriptimport react from reactimport textfield from material-components-webexport default class textfield extends react.purecomponent instantiate the vanilla material component once the react component mounts componentdidmount this.mdccomponent new textfield.mdctextfield(this.mdcmount clean up the vanilla material component along with the react component componentwillunmount this.mcdcomponent.destroy render note in the second opening div how i get a reference to the dom element of the text field return div classname=mdc-form-field div classname=mdc-textfield ref={(div this.mdcmount div input type=text classname=mdc-textfield__input id=demo-input onchange={this.props.onchange label htmlfor=demo-input classname=mdc-textfield__label this.props.label label div div
212683705,389,https://api.github.com/repos/material-components/material-components-web/issues/389,Download,2,0,0,0,0,1,i am wondering is material components web compatible with amp do not find any mention of amp on this project and the amp website does not mention material components both google projects seem to be targetting the same kind of modern progressive web app style but i dont think we are allowed to include the material components web js script in an amp page so can we combine them?i am wondering about this because i am hoping to support amp and it would be very convenient if the amp pages could use the same material components as the main pages but i wonder if its possible?is amp support a target for you guys?do you have pointers on docs/guidance about this?if i am right in thinking we cannot embed the material-components-web js script on an amp page is there guidance available on which components we can still use if we dont have this script
212561281,386,https://api.github.com/repos/material-components/material-components-web/issues/386,kminehart,1,0,0,0,0,0,what mdc-web version are you using what browser(s is this bug affecting firefox chrome what os are you using linux w kernel what are the steps to reproduce the bug click on the button that says click me click on the button again notice in the console that the cancel event will continue to fire but the menu will be hidden.this isnt exactly whats happening to be but its related what is the expected behavior ideally clicking the button again wouldnt do anything but the switch should toggle and it does what is the actual behavior clicking on the button again closes the menu and then prevents it from being open again each subsequent click will fire the close event any other information you believe would be useful?heres why this is a problem for me:! screenshot toggling clicking the settings button again does nothing but the cancel event continues to fire.! screenshot not entirely sure if im doing this right ill try creating a component using the foundation class rather than using the menu-simple built in object and report back
209783448,351,https://api.github.com/repos/material-components/material-components-web/issues/351,orlin,22,0,0,0,0,0,i really want to use your library especially with sass however i cant include the scss styles with my current configuration that is using webpack and sass-loader here is an example project here is a comment describing the issue basically i cant import the scss of button in this case neither with relative paths nor with the alias to node_modules that node-sass sass-loader supports the problem in this case is import material/animation/variables i expect there would be many other similar imports in the library do you have know of a working webpack example?i thought eyeglass would help but i cant set that up with webpack here is an eyeglass issue and my comment on it that has a broken version of my config trying to tell sass-loader to use eyeglass for importing.so im trying this with material-components-web and more specifically material/button importing from its dependency material/animation its also worth noting that im using yarn which keeps a flat directory structure of my dependencies i wonder if you assume a regular npm install and thus hierarchical dependencies?here is the example error error in pages/index.js.scssmodule build failed:@import material/animation/variables file to import not found or unreadable material/animation/variables.parent style sheet users/om/dev/mel/drmelgill.com/node_modules/@material/button/mdc-button.scss in users/om/dev/mel/drmelgill.com/node_modules/@material/button/mdc-button.scss line column pages?entry multi next/dist/client/webpack-hot-middleware-client pages?entry either of these two would cause it and mdc-button.scss is found in both cases import node_modules/@material/button/mdc-button.scss valid relative path import material/button/mdc-button.scss node_modulesso im not really sure if this is about configuration help documentation example bug report or a feature request
209539011,348,https://api.github.com/repos/material-components/material-components-web/issues/348,kminehart,2,0,0,0,0,0,im trying to do the right thing and keep as much css manual overriding out of my application im working on it becomes a hassle to take this idea that i want to apply like changing the height of the toolbar and then have to change all of the components that would use mdc-toolbar-height whenever i should just change mdc-toolbar-height .so i was wondering if theres a way to override these variables im at a loss because id normally do: @import material/toolbar/_variables;$mdc-toolbar-height px;/*...*/@import material/toolbar/mdc-toolbar however the variables are built into mdc-toolbar is there no way to override them
209200929,318,https://api.github.com/repos/material-components/material-components-web/issues/318,abraham,5,0,0,0,0,0,there is no animation demo and the documentation isnt very clear it would be great if there would be a couple of demos fab to card animation demo would be a nice one to see
208194713,295,https://api.github.com/repos/material-components/material-components-web/issues/295,sgomes,1,0,0,0,0,0,implements skip ci
206648853,283,https://api.github.com/repos/material-components/material-components-web/issues/283,TangSteven,2,0,0,0,0,0,spec reference floating action button can fling out related actions upon press the button should remain on screen after the menu is invoked tapping in the same spot should either activate the most commonly used action or close the open menu
206301073,278,https://api.github.com/repos/material-components/material-components-web/issues/278,azavisha,1,0,0,0,0,0,"when i try to import the entire freshly installed library into a new project: @import material-components-web/material-components-web; i get the following sass compilation error: invalid css after penumbra-color expected was on line of www/libraries/node_modules/@material/elevation/_mixins.scss from line of www/libraries/node_modules/@material/button/mdc-button.scss from line of www/libraries/node_modules/material-components-web/material-components-web.scss when i comment out these lines compilation succeeds. #{$mdc-elevation-property}: #{map-get($mdc-elevation-umbra-map z-value mdc-elevation-umbra-color, #{map-get($mdc-elevation-penumbra-map z-value mdc-elevation-penumbra-color, #{map-get($mdc-elevation-ambient-map z-value mdc-elevation-ambient-color; this is obviously not a solution but it probably means the issue is related to this code.i have the latest version of mdc-web and sass"
205414349,253,https://api.github.com/repos/material-components/material-components-web/issues/253,Hardtack,2,0,0,0,0,0,im implementing custom mdcripplefoundation adapter.as you mentioned in document supportscssvariables function in util.js would be useful to implement browsersupportscssvars boolean .but material/ripple/dist/mdc.ripple does not exposes the utils module so i cannot use the module without transpiler configured for mdc javascript in some_library/src/foo.js will be transpiled to es code in some_library/lib/foo.js import supportscssvariables from material/ripple/util;... if i use transpiler to use that module users of some_library also have to use same transpiler but it does not seem to be good constraints javascript in application that does not use any transpiler raises syntax error when importing material/ripple/util var ripplewrapper require(some_library/lib/foo.js
205284645,248,https://api.github.com/repos/material-components/material-components-web/issues/248,rhroyston,1,0,0,0,0,0,css webkit-font-smoothing:antialiased is set by mdc-typography class im no graphics expert but someone who sounds like one say this is a no no also mdn says no no stop fixing webkit font smoothing by disabling subpixel rendering for main portions of text where readability is paramount please leave the default setting alone and let the operating system handle the smoothing dmitry fadeyev do not use it on production sites facing the web webkit implements something similar with a different name webkit-font-smoothing and different values however just like font-smooth this is non-standard and should not be used font-smooth mdn
204001341,226,https://api.github.com/repos/material-components/material-components-web/issues/226,Arwany,1,0,0,0,0,0,bug what mdc-web version are you using?all versions what browser(s is this bug affecting?safari on ios what os are you using?ios on iphone s what are the steps to reproduce the bug?just open the page no material icons are being rendered what is the expected behavior?to see icons not text what is the actual behavior?i am getting texts in place of icons any other information you believe would be useful?
200649517,178,https://api.github.com/repos/material-components/material-components-web/issues/178,desvandev,1,0,0,0,0,0,whenever i click on a checkbox the ripple effect freezes i guess this is because the animation trigger is set on focus i suppose the animation should bounce back?.! image
200102906,171,https://api.github.com/repos/material-components/material-components-web/issues/171,BBosman,0,0,0,1,0,1,remove all of the no longer needed stylelint-disable stylelint-enable dollar-variable-pattern comments fixes
200099719,170,https://api.github.com/repos/material-components/material-components-web/issues/170,sgomes,7,0,0,1,0,0,spec reference
199014739,160,https://api.github.com/repos/material-components/material-components-web/issues/160,amsheehan,1,0,0,0,0,0,resolves
197743453,149,https://api.github.com/repos/material-components/material-components-web/issues/149,appunnicer13,4,0,0,0,0,0,i am not trying to disturb or anything just picking your brains on why could not material design team anticipate web components v from seeing the standard felt like it would be on the same lines with concepts involved here about independent components polymer is going on those lines but just wanted to know what will be the difference between mdc and polymer with regards to an end user or a developer why use mdc i mean basically web components standards is a thing now shadow dom v and web components v are approved standards on most browser vendors and expecting more paper components and material components from many users in the coming future so i am just guessing mdc might get left out sooner than it could make an impact please forgive me for pinging you all for such an off topic discussion but just curiosity
197685197,147,https://api.github.com/repos/material-components/material-components-web/issues/147,rontav,0,0,0,1,0,0,feature request demo my implementation of material button think the button and other components should support having multiple ripples active at the same time some could argue that this could distract the user but i think it is a cool small visual detail.also we should implement the focus state of the ripple.! image an opinion the ripple in the material design guidelines is way too fast i think the animation should be slower to allow the user to see the effect in all its greatness
197610188,145,https://api.github.com/repos/material-components/material-components-web/issues/145,kripod,4,0,0,0,0,0,while framework examples are not hard to follow or even copy they introduce extra boilerplate code for developers i would suggest creating separate packages for each popular frontend framework e.g react-material-components-web potentially raising the adoption rate of the library
196733546,138,https://api.github.com/repos/material-components/material-components-web/issues/138,traviskaufman,1,0,0,0,0,0,what mdc version are you using please be specific e.g major.minor.patch what browser(s is this bug affecting including version all what os and version are you using?mac os x what are the steps to reproduce the bug can you create a plunker/codepen/jsfiddle which reproduces it checkout master npm i npm run dev navigation to click and hold in the center of the unbounded ripple observe where the foreground ripple expands from what is the expected behavior?the foreground ripple should expand from the center position where the pointer activated it what is the actual behavior?the foreground ripple expands from the top-left portion of the touch point any other information you believe would be useful?this is probably due to the fact that we are either calculating transform origin vars wrong for unbounded ripples in js or using them wrong in css copied from
196733110,137,https://api.github.com/repos/material-components/material-components-web/issues/137,traviskaufman,1,0,0,0,0,0,img width alt=screen shot at am src tried detecting this via change events which didnt work i also tried checking for value on init but that only worked for non-password inputs and was non-deterministic in terms of its timing.possible workarounds style for autofill this is clearly the most elegant solution but looks like its chrome only have elements poll to check if theyre auto-filledthis will lead to the highest design fidelity but is extremely inefficient and will incur a significant performance impact especially on mobile browsers tell users to set autocomplete=off this would in theory solve the problem however it is not only an inconvenience to the user but its not guaranteed to work correctly for all types of input tell users to only use js-enhanced single-line inputs with form fields that wont be auto-completed copied from x summarize research on how most browsers handle auto-filling and present best solution implement solution
196492658,134,https://api.github.com/repos/material-components/material-components-web/issues/134,traviskaufman,5,0,0,0,0,0,by the time mdc-web reaches beta we need to provide support for typed ecma variants specifically we need support for closure compiler closure and typescript ts this is the issue where all research around our strategy for supporting closure ts should be done closure compiler support google closure compiler support is required in order to support the google projects and properties which are built around this toolchain concretely mdc-web must be able to compile with advanced_optimizations enabled and produce no errors or warnings there are implications for internal support as well but that is outside the scope of this issue verification plan introduce a build test e.g npm run test:closure which runs closure on all packages but does not output anything this can be done using closures checks_only flag the advantage here is that nothing about our build system changes optional switch out uglifyjs for the closure compiler webpack plugin and use that to minify our code the advantage here is we not only get type-checking but we also take advantage of closures extremely sophisticated optimization techniques the disadvantage is that its way slower to optimize and we may have to restructure some of our code for it to work correctly typescript support typescript is angulars de facto language choice it also seems to be the most popular typed ecmascript variant for these reason i believe its important to provide first-class support for typescript users wanting to use mdc-web concretely mdc-web should provide type declaration files for all components foundations and adapters .the type declaration files can live in the component package directory and should be called index.d.ts this will allow typescripts module resolution algorithm to automatically discover these typings furthermore having type declarations should become a requirement for all components moving forward the ts handbook as a module declaration file template that we could use as a starting point for our ts modules verification planim not sure how to validate type declaration files alone so more research has to be done on this implementation optionsthere are a few implementation options which i will discuss below any additional implementation options surfaced by the community should be added to this section i personally think all of these options should be experimented with but we could rule some out via discussion on this issue closure-annotated source files manual typingsall source files are annotated using jsdoc for the closure compiler.type declaration files are manually authored in addition to adding closure compiler annotations.a page within docs could be created outlining any non-standard practices within our source code that are closure-specific e.g using expressions for typedef s using dummy classes for record types etc.) pros requires the least amount of changes to tooling and infrastructure source code will be idiomatic for closure compiler users and will yield optimal closure compiler optimizations type declarations will be idiomatic for ts users. cons more work for developers to implement components duplication of effort specifying same types for two different type systems type declarations and closure annotations prone to go out-of-sync tooling may be needed to verify that changes to jsdocs are reflected by changes to type declarations and vice-versa closure-annotated source files clutzall source files are annotated using jsdoc for the closure compiler.angulars clutz tool is used to emit type declaration files from closure-annotated source files this can be added as part of a pre-commit hook. pros source files remain in es and ensure highest level of optimization from closure no duplication of effort maintaining both closure annotations and type decls source files are idiomatic for closure compiler users speculatively it seems that ts can support closures type system much better than closure can support tss type system thus transpilation from closure to ts may be more high-quality than the other way around see below). cons clutz requires java as well as some extra set up on our end unsure of the quality of type declarations emitted by clutz research has to be done on this typescript source files tsickleinstead of writing source files in es source files are written using typescript.before publishing to npm and extra build step will be added to transpile them to their es sources using commonjs as its module system this would ensure the built source files would work with module loading systems such as webpack alternatively we could preserve the es imports angulars tsickle could be used to annotate the source files for closure.the ts compiler could output proper declaration files for our project which could be added to version control since the declarations files would reflect the public api. pros we get all of the nice language tooling around working on large-scale ts codebases ts becomes our single source of truth declarations and closure-compatible js could all be emitted from our source files reducing duplication of effort and number of manual tasks needed to implement a component source code feels idiomatic to the closure community cons doing this would require a rewrite of all of current components to ts as well as all agreeing on a new source language that were using doing this would require an overhaul to our build system the use of ts while popular still means using a base language different from plain ecmascript which is what we strive for in order to facilitate the maximum amount of community contribution tsickle has many open issues denoting that the quality of the transpilation of ts sources might not be up-to-par with the quality of hand-written jsdoc this may preclude its use within internal apps since it would lead to poorer optimization in my limited experience with tsickle its been okay but wed have to test this out on a non-trivial component such as material/ripple before deeming it viable
196358059,130,https://api.github.com/repos/material-components/material-components-web/issues/130,SabineMa,14,0,0,0,0,0,this is not a feature request and not a bug but the question will you provide a migration guide for people using mdl and want to migrate to mdc
196245694,128,https://api.github.com/repos/material-components/material-components-web/issues/128,fballiano,4,0,0,0,0,0,i cant find any documentation or component about using the responsive ui grid explained here material-components-web am i missing something or its not implemented yet or maybe theres no documentation about it?thanks
196225588,125,https://api.github.com/repos/material-components/material-components-web/issues/125,krishnaxv,1,0,0,0,0,0,material design components with react bootstrapped with create-react-app). import drawer as mdcdrawer from material-components-web throws following error in browser console. uncaught syntaxerror unexpected token import import drawer as mdcdrawer from material-components-web/dist/material-components-web works fine.i also tried to import drawer component individually with import mdctemporarydrawer from material/drawer it also throws the same error.i have installed both material-components-web and material/drawer with yarn. os ubuntu lts steps to reproduce bug run yarn start in your project directory go to url on the browser check error on browser console
196141871,120,https://api.github.com/repos/material-components/material-components-web/issues/120,krishnaxv,1,0,0,0,0,0,aurelia framework example throws error with npm start on cli and fails to start. /home/krishnaxv/desktop/material-components-web/framework-examples/aurelia/node_modules/webpack-dev-server/lib/server.js var validationerrors webpack.validateschema(optionsschema options typeerror webpack.validateschema is not a function at new server home/krishnaxv/desktop/material-components-web/framework-examples/aurelia/node_modules/webpack-dev-server/lib/server.js at startdevserver home/krishnaxv/desktop/material-components-web/framework-examples/aurelia/node_modules/webpack-dev-server/bin/webpack-dev-server.js at processoptions home/krishnaxv/desktop/material-components-web/framework-examples/aurelia/node_modules/webpack-dev-server/bin/webpack-dev-server.js at object.
196083716,114,https://api.github.com/repos/material-components/material-components-web/issues/114,Klaasvaak,2,0,0,0,0,0,use purecomponent instead of the purerendermixin.from react docs the purerendermixin mixin predates react.purecomponent this reference doc is provided for legacy purposes and you should consider using react.purecomponent instead
196053054,109,https://api.github.com/repos/material-components/material-components-web/issues/109,ArthurClemens,4,0,0,0,0,0,i consider the use of letter-spacing bad practice that should be discouraged it changes the carefully crafted font character kerning and replaces it with some arbitrary spacing value it disregards the font author and does not even improve readability because of the uneven result the design specs on typography do not show any example of letter-spacing.consumers of this framework will need to override the styles in many places in order to achieve natural fonts.please remove letter-spacing from the stylesheets
196002270,107,https://api.github.com/repos/material-components/material-components-web/issues/107,mikkom,2,0,0,0,0,0,trying to run the react example fails when opening in browser console shows the following errors. error in css-loader!./~/postcss-loader!./~/sass-loader!/users/mikkom/prj/third-party/material-components-web/packages/mdc-form-field/mdc-form-field.scssmodule build failed:@import material/rtl/mixins file to import not found or unreadable material/rtl/mixinsparent style sheet stdin in users/mikkom/prj/third-party/material-components-web/packages/mdc-form-field/mdc-form-field.scss line column users/mikkom/prj/third-party/material-components-web/packages/mdc-form-field/mdc-form-field.scss error in css-loader!./~/postcss-loader!./~/sass-loader!/users/mikkom/prj/third-party/material-components-web/packages/mdc-checkbox/mdc-checkbox.scssmodule build failed:@import material/animation/functions file to import not found or unreadable material/animation/functionsparent style sheet stdin in users/mikkom/prj/third-party/material-components-web/packages/mdc-checkbox/mdc-checkbox.scss line column users/mikkom/prj/third-party/material-components-web/packages/mdc-checkbox/mdc-checkbox.scss
194639561,70,https://api.github.com/repos/material-components/material-components-web/issues/70,traviskaufman,1,0,0,0,0,0,helpers package for reusable functions for dealing with ui interactions for this particular issue we are simply implementing focus trapping but the package has the potential to facilitate more ui-related helper functions as well create package refactor mdc-temporary-drawer to use package
193618728,61,https://api.github.com/repos/material-components/material-components-web/issues/61,traviskaufman,2,0,0,0,0,0,currently only text input fields will be styled it would be great to support the styling of file input fields.if you decide not to support this than no styling should be done because currently it will be styled and the label is over the uplaod button.! input-type-file copied from
193618723,59,https://api.github.com/repos/material-components/material-components-web/issues/59,traviskaufman,19,0,0,0,0,0,spec reference for mobile-specific sites and layouts copied from
193618721,58,https://api.github.com/repos/material-components/material-components-web/issues/58,traviskaufman,2,0,0,0,0,0,spec reference copied from
193618720,57,https://api.github.com/repos/material-components/material-components-web/issues/57,traviskaufman,96,0,0,0,0,21,spec reference copied from
193618719,56,https://api.github.com/repos/material-components/material-components-web/issues/56,traviskaufman,17,0,0,0,0,0,spec reference copied from
193618715,55,https://api.github.com/repos/material-components/material-components-web/issues/55,traviskaufman,49,0,0,0,0,2,spec reference copied from
193618709,54,https://api.github.com/repos/material-components/material-components-web/issues/54,traviskaufman,14,0,0,0,0,1,spec reference copied from
193618707,53,https://api.github.com/repos/material-components/material-components-web/issues/53,traviskaufman,1,0,0,0,0,0,spec reference copied from
193618705,52,https://api.github.com/repos/material-components/material-components-web/issues/52,traviskaufman,3,0,0,0,0,0,spec reference also also copied from
193618702,51,https://api.github.com/repos/material-components/material-components-web/issues/51,traviskaufman,3,0,0,0,0,0,spec reference copied from
193618651,48,https://api.github.com/repos/material-components/material-components-web/issues/48,traviskaufman,4,0,0,0,0,0,spec reference done a lot of work on this internally so im happy to take it copied from
193618650,47,https://api.github.com/repos/material-components/material-components-web/issues/47,traviskaufman,5,0,0,0,0,0,spec reference copied from
193618648,46,https://api.github.com/repos/material-components/material-components-web/issues/46,traviskaufman,19,0,0,0,0,0,spec reference single expansion panel expansion panel group accordion a la inbox copied from
193618647,45,https://api.github.com/repos/material-components/material-components-web/issues/45,traviskaufman,4,0,0,0,0,0,spec reference full-width autocomplete inline autocomplete copied from
193618645,44,https://api.github.com/repos/material-components/material-components-web/issues/44,traviskaufman,12,0,0,0,0,7,spec reference all steppers step types except mobile step mobile stepcaveat we might want to split this up differently once we get to this task and recategorize the stepper types from the spec language to make it less ambiguous copied from
193618642,43,https://api.github.com/repos/material-components/material-components-web/issues/43,traviskaufman,2,0,0,0,0,0,hello glad to hear work has begun on v.id like to request that google closure library externs are generated once v is complete copied from
193618517,38,https://api.github.com/repos/material-components/material-components-web/issues/38,traviskaufman,3,0,0,0,0,0,x no-seam static x seam always fixed x no-seam seam fixed waterfall x flexible headerspec reference copied from
193618514,37,https://api.github.com/repos/material-components/material-components-web/issues/37,traviskaufman,4,0,0,0,0,0,spec reference copied from
193618509,35,https://api.github.com/repos/material-components/material-components-web/issues/35,traviskaufman,1,0,0,0,0,0,spec reference motion video mock implement proper transitions between fab and single sheet menu add correct keyboard aythere are internal motion mocks for these transitions that i can get when it comes time to implement copied from
193618507,34,https://api.github.com/repos/material-components/material-components-web/issues/34,traviskaufman,2,0,0,0,0,0,spec reference copied from
193618502,33,https://api.github.com/repos/material-components/material-components-web/issues/33,traviskaufman,1,0,0,0,0,0,spec reference copied from
193618500,32,https://api.github.com/repos/material-components/material-components-web/issues/32,traviskaufman,1,0,0,0,0,0,spec reference also made a codepen mocking up a basic dialog sketch though the spec doesnt have an x button in their mocks it does work well for large dialogs on big screens so we may want to consider it copied from
193618499,31,https://api.github.com/repos/material-components/material-components-web/issues/31,traviskaufman,1,0,0,0,0,0,specs copied from
193618497,30,https://api.github.com/repos/material-components/material-components-web/issues/30,traviskaufman,12,0,0,0,0,0,spec reference copied from
193618495,29,https://api.github.com/repos/material-components/material-components-web/issues/29,traviskaufman,6,0,0,0,0,0,spec reference also copied from
193618494,28,https://api.github.com/repos/material-components/material-components-web/issues/28,traviskaufman,1,0,0,0,0,0,spec reference its been called a toast in the past but the thing thats not android-specific is a snackbar x initial implementation x dark theme background fafafa text text-primary-on-dark action theme primary color x keyboard focus handling x in demo ensure that action on bottom is unchecked and disabled when multiline is unchecked x end-to-end usage example in readme instantiation using it in response to an event x start_-aligned snackbars left for ltr right for rtl x add dismissonaction option which defaults to true when true snackbar dismisses as soon as a user interacts with its action button see x address copied from
193618490,26,https://api.github.com/repos/material-components/material-components-web/issues/26,traviskaufman,2,0,0,0,0,0,spec reference copied from
193618489,25,https://api.github.com/repos/material-components/material-components-web/issues/25,traviskaufman,1,0,0,0,0,0,x continuous slider x discrete slider already doing some work on this notesstep values need to be able to be quantized to decimal places e.g min max step possible algorithm take the raw value divide it by step round that number and then multiply the original step value by the rounded number e.g jsfunction quantize(val min max step const numsteps math.round(val step const quantizedval numsteps step return math.max(min math.min(max quantizedval));}const min max step quantize min max step quantize min max step quantize min max step copied from
193618488,24,https://api.github.com/repos/material-components/material-components-web/issues/24,traviskaufman,15,0,0,0,0,0,spec reference copied from
193618487,23,https://api.github.com/repos/material-components/material-components-web/issues/23,traviskaufman,2,0,0,0,0,0,spec reference copied from
193618480,18,https://api.github.com/repos/material-components/material-components-web/issues/18,traviskaufman,1,0,0,0,0,0,in v~~mdl we had the concept of user-submissions for inclusion on but only got around to highlighting a few of the google properties that shipped with mdl support as submissions tend to be of varying quality i might suggest that we move to just including user submissions in a wiki page that can be referenced but doesnt necessarily appear on the site thoughts sgomes copied from
193618474,15,https://api.github.com/repos/material-components/material-components-web/issues/15,traviskaufman,1,0,0,0,0,0,spec reference drawers are the ones that remain on the page yet collapse into miniature drawers when not being used copied from
193618467,12,https://api.github.com/repos/material-components/material-components-web/issues/12,traviskaufman,13,0,0,0,0,0,spec reference that this is just a button with an icon instead of text could be added to mdc-button copied from
193618464,10,https://api.github.com/repos/material-components/material-components-web/issues/10,traviskaufman,2,0,0,0,0,0,attach css class data attr to document element indicating that a snackbar is visible and what type is visible create a mixin css class combo that can be attached to elements and translates the elements using the correct easing curve timing and y offset depending on the type of snackbar copied from
193618450,4,https://api.github.com/repos/material-components/material-components-web/issues/4,traviskaufman,1,0,0,0,0,0,component that would allow users to easily and transparently switch between a custom select and native select providing a good ux across all form factors copied from
193618448,3,https://api.github.com/repos/material-components/material-components-web/issues/3,traviskaufman,4,0,0,0,0,0,in order to simplify css custom property-level theming we should have a utility method that a developer can call to generate all the text colors using the color contrast algorithm based off of the provided primary accent and background colors. jsmdl.theme.applytheme document.queryselector(:root primary fb accent ff background fff)); resulting in: css:root mdl-theme-primary fb mdl-theme-accent ff mdl-theme-background fff mdl-theme-text-primary-on-primary white mdl-theme-text-secondary-on-primary rgba mdl-theme-text-hint-on-primary rgba mdl-theme-text-disabled-on-primary rgba mdl-theme-text-icon-on-primary rgba mdl-theme-text-primary-on-accent white mdl-theme-text-secondary-on-accent rgba mdl-theme-text-hint-on-accent rgba mdl-theme-text-disabled-on-accent rgba mdl-theme-text-icon-on-accent rgba mdl-theme-text-primary-on-background rgba mdl-theme-text-secondary-on-background rgba mdl-theme-text-hint-on-background rgba mdl-theme-text-disabled-on-background rgba mdl-theme-text-icon-on-background rgba mdl-theme-text-primary-on-light rgba mdl-theme-text-secondary-on-light rgba mdl-theme-text-hint-on-light rgba mdl-theme-text-disabled-on-light rgba mdl-theme-text-icon-on-light rgba mdl-theme-text-primary-on-dark white mdl-theme-text-secondary-on-dark rgba mdl-theme-text-hint-on-dark rgba mdl-theme-text-disabled-on-dark rgba mdl-theme-text-icon-on-dark rgba copied from
